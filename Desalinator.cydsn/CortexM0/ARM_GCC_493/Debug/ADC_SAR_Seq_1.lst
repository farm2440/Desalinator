ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC_SAR_Seq_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ADC_SAR_Seq_1_Init,"ax",%progbits
  18              		.align	2
  19              		.global	ADC_SAR_Seq_1_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	ADC_SAR_Seq_1_Init, %function
  23              	ADC_SAR_Seq_1_Init:
  24              	.LFB1:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\ADC_SAR_Seq_1.c"
   1:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * File Name: ADC_SAR_Seq_1.c
   3:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Version 2.40
   4:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
   5:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Description:
   6:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Approximation ADC Component Component.
   8:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
   9:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Note:
  10:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  11:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  18:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #include "ADC_SAR_Seq_1.h"
  19:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  20:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  21:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /***************************************
  22:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global data allocation
  23:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ***************************************/
  24:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** uint8 ADC_SAR_Seq_1_initVar = 0u;
  25:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** volatile int16 ADC_SAR_Seq_1_offset[ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM];
  26:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** volatile int32 ADC_SAR_Seq_1_countsPer10Volt[ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM];   /* Gain compensat
  27:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  28:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  29:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /***************************************
  30:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Local data allocation
  31:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ***************************************/
  32:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /* Channels configuration generated by customiser */
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 2


  33:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** static const uint32 CYCODE ADC_SAR_Seq_1_channelsConfig[] = { 0x00000400u };
  34:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  35:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  36:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
  37:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Start
  38:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  39:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  40:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
  41:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Performs all required initialization for this component
  42:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  and enables the power. The power will be set to the appropriate
  43:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  power based on the clock frequency.
  44:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  45:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
  46:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  47:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  48:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
  49:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  50:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  51:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
  52:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  The ADC_SAR_Seq_1_initVar variable is used to indicate when/if initial
  53:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  configuration of this component has happened. The variable is initialized to
  54:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start() routine.
  57:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If re-initialization of the component is required the variable should be set
  58:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  to zero before call of ADC_SAR_Seq_1_Start() routine, or the user may call
  59:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Init() and ADC_SAR_Seq_1_Enable() as done in the
  60:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start() routine.
  61:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  62:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  63:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Start(void)
  64:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
  65:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* If not Initialized then initialize all required hardware and software */
  66:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if(ADC_SAR_Seq_1_initVar == 0u)
  67:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
  68:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_Init();
  69:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_initVar = 1u;
  70:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
  71:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_Enable();
  72:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
  73:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  74:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  75:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
  76:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Init
  77:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  78:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  79:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
  80:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Initialize component's parameters to the parameters set by user in the
  81:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  customizer of the component placed onto schematic. Usually called in
  82:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start().
  83:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  84:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
  85:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  86:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  87:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
  88:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  89:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 3


  90:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
  91:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  The ADC_SAR_Seq_1_offset variable is initialized.
  92:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  93:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  94:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Init(void)
  95:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
  26              		.loc 1 95 0
  27              		.cfi_startproc
  28 0000 08B5     		push	{r3, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 3, -8
  31              		.cfi_offset 14, -4
  96:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 chNum;
  97:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 tmpRegVal;
  98:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int32 counts;
  99:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 100:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 101:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         static const uint8 CYCODE ADC_SAR_Seq_1_InputsPlacement[] =
 102:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 103:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_0_PIN
 105:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****              (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_1_PIN
 107:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 2u)
 108:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_2_PIN
 110:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 2u */
 111:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 3u)
 112:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_3_PIN
 114:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 3u */
 115:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 4u)
 116:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_4_PIN
 118:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 4u */
 119:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 5u)
 120:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_5_PIN
 122:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 5u */
 123:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 6u)
 124:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_6_PIN
 126:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 6u */
 127:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 7u)
 128:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_7_PIN
 130:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 7u */
 131:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 8u)
 132:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_8_PIN
 134:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 8u */
 135:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 9u)
 136:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_9_PIN
 138:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 9u */
 139:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 10u)
 140:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 4


 141:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_10_PIN
 142:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 10u */
 143:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 11u)
 144:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_11_PIN
 146:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 11u */
 147:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 12u)
 148:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_12_PIN
 150:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 12u */
 151:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 13u)
 152:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_13_PIN
 154:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 13u */
 155:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 14u)
 156:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_14_PIN
 158:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 14u */
 159:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 15u)
 160:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_15_PIN
 162:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 15u */
 163:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 16u)
 164:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_16_PIN
 166:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 16u */
 167:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         };
 168:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 169:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 170:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_IRQ_REMOVE == 0u)
 171:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Start and set interrupt vector */
 172:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CyIntSetPriority(ADC_SAR_Seq_1_INTC_NUMBER, ADC_SAR_Seq_1_INTC_PRIOR_NUMBER);
  32              		.loc 1 172 0
  33 0002 0E20     		mov	r0, #14
  34 0004 0321     		mov	r1, #3
  35 0006 FFF7FEFF 		bl	CyIntSetPriority
  36              	.LVL0:
 173:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         (void)CyIntSetVector(ADC_SAR_Seq_1_INTC_NUMBER, &ADC_SAR_Seq_1_ISR);
  37              		.loc 1 173 0
  38 000a 0E20     		mov	r0, #14
  39 000c 2449     		ldr	r1, .L6
  40 000e FFF7FEFF 		bl	CyIntSetVector
  41              	.LVL1:
 174:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif   /* End ADC_SAR_Seq_1_IRQ_REMOVE */
 175:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 176:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Init SAR and MUX registers */
 177:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CHAN_EN_REG = ADC_SAR_Seq_1_DEFAULT_EN_CHANNELS;
  42              		.loc 1 177 0
  43 0012 0122     		mov	r2, #1
  44 0014 234B     		ldr	r3, .L6+4
  45 0016 1A60     		str	r2, [r3]
 178:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
 179:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         (((ADC_SAR_Seq_1_PUMP_CTRL_REG & ADC_SAR_Seq_1_PUMP_CTRL_ENABLED) != 0u) ? 
  46              		.loc 1 180 0
  47 0018 234B     		ldr	r3, .L6+8
  48 001a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 5


 178:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
  49              		.loc 1 178 0
  50 001c 002B     		cmp	r3, #0
  51 001e 01DA     		bge	.L5
  52 0020 2249     		ldr	r1, .L6+12
  53 0022 00E0     		b	.L2
  54              	.L5:
  55 0024 2249     		ldr	r1, .L6+16
  56              	.L2:
 178:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
  57              		.loc 1 178 0 is_stmt 0 discriminator 4
  58 0026 234A     		ldr	r2, .L6+20
  59 0028 1368     		ldr	r3, [r2]
  60 002a 0B43     		orr	r3, r1
  61 002c 1360     		str	r3, [r2]
 181:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_BOOSTPUMP_EN : 0u);
 182:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_CTRL_REG_CFG;
  62              		.loc 1 182 0 is_stmt 1 discriminator 4
  63 002e 224A     		ldr	r2, .L6+24
  64 0030 224B     		ldr	r3, .L6+28
  65 0032 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG = ADC_SAR_Seq_1_DEFAULT_RANGE_THRES_REG_CFG;
  66              		.loc 1 183 0 discriminator 4
  67 0034 224A     		ldr	r2, .L6+32
  68 0036 234B     		ldr	r3, .L6+36
  69 0038 1A60     		str	r2, [r3]
 184:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_COND_REG  = ADC_SAR_Seq_1_COMPARE_MODE;
  70              		.loc 1 184 0 discriminator 4
  71 003a 0023     		mov	r3, #0
  72 003c 224A     		ldr	r2, .L6+40
  73 003e 1360     		str	r3, [r2]
 185:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME01_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME01_REG_CFG;
  74              		.loc 1 185 0 discriminator 4
  75 0040 224A     		ldr	r2, .L6+44
  76 0042 2349     		ldr	r1, .L6+48
  77 0044 0A60     		str	r2, [r1]
 186:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME23_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME23_REG_CFG;
  78              		.loc 1 186 0 discriminator 4
  79 0046 2349     		ldr	r1, .L6+52
  80 0048 0A60     		str	r2, [r1]
 187:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 188:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0 != 0u)
 190:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_MUX_SWITCH0_REG |= ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0;
  81              		.loc 1 190 0 discriminator 4
  82 004a 2349     		ldr	r1, .L6+56
  83 004c 0A68     		ldr	r2, [r1]
  84 004e 8020     		mov	r0, #128
  85 0050 4002     		lsl	r0, r0, #9
  86 0052 0243     		orr	r2, r0
  87 0054 0A60     		str	r2, [r1]
 191:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 193:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ADC_SAR_Seq_1_MUX_SWITCH_HW_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0;
 194:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 195:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /*ADC_SAR_Seq_1_CHANNELS_MODE !=0 */
 196:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 6


 197:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG = 0u;
  88              		.loc 1 197 0 discriminator 4
  89 0056 214A     		ldr	r2, .L6+60
  90 0058 1360     		str	r3, [r2]
 198:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = 0u;
  91              		.loc 1 198 0 discriminator 4
  92 005a 214A     		ldr	r2, .L6+64
  93 005c 1360     		str	r3, [r2]
 199:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_INTR_MASK_REG = ADC_SAR_Seq_1_SAR_INTR_MASK;
  94              		.loc 1 199 0 discriminator 4
  95 005e 0133     		add	r3, r3, #1
  96 0060 204A     		ldr	r2, .L6+68
  97 0062 1360     		str	r3, [r2]
 200:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 201:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 202:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_ANA_TRIM_REG = ADC_SAR_Seq_1_TRIM_COEF;
  98              		.loc 1 202 0 discriminator 4
  99 0064 0221     		mov	r1, #2
 100 0066 204A     		ldr	r2, .L6+72
 101 0068 1160     		str	r1, [r2]
 203:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 204:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 205:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Read and modify default configuration based on characterization */
 206:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal = ADC_SAR_Seq_1_SAR_DFT_CTRL_REG;
 102              		.loc 1 206 0 discriminator 4
 103 006a 2049     		ldr	r1, .L6+76
 104 006c 0868     		ldr	r0, [r1]
 105              	.LVL2:
 207:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DCEN;
 106              		.loc 1 207 0 discriminator 4
 107 006e 204A     		ldr	r2, .L6+80
 108 0070 0240     		and	r2, r0
 109              	.LVL3:
 208:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 209:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 210:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_NOMINAL_CLOCK_FREQ > (ADC_SAR_Seq_1_MAX_FREQUENCY / 2))
 211:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_SEL_CSEL_DFT_CHAR;
 212:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else  /* clock speed < 9 Mhz */
 213:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DLY_INC;
 110              		.loc 1 213 0 discriminator 4
 111 0072 1343     		orr	r3, r2
 112              	.LVL4:
 214:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* clock speed > 9 Mhz */
 215:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #else
 216:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if ((ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNAL1024) || \
 217:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****              (ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNALVREF))
 218:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DLY_INC;
 219:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else
 220:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DCEN;
 221:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DLY_INC;
 222:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ((ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNAL1024) || \
 223:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                    (ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNALVREF)) */
 224:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 225:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 226:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_DFT_CTRL_REG = tmpRegVal;
 113              		.loc 1 226 0 discriminator 4
 114 0074 0B60     		str	r3, [r1]
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 7


 115              	.LVL5:
 227:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 228:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12)
 229:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_WOUNDING_REG = ADC_SAR_Seq_1_ALT_WOUNDING;
 230:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12 */
 231:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 232:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     for(chNum = 0u; chNum < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM; chNum++)
 116              		.loc 1 232 0 discriminator 4
 117 0076 0023     		mov	r3, #0
 118              	.LVL6:
 119 0078 0FE0     		b	.L3
 120              	.LVL7:
 121              	.L4:
 233:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 234:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         tmpRegVal = (ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_CHANNEL_CONFIG_MASK);
 235:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 236:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_InputsPlacement[chNum];
 237:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 238:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 239:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 240:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         *  (0) and 8-bit (1) resolution.
 243:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         */
 244:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if((ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12) && \
 245:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (ADC_SAR_Seq_1_ALT_WOUNDING == ADC_SAR_Seq_1_WOUNDING_10BIT))
 246:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal &= (uint32)(~ADC_SAR_Seq_1_ALT_RESOLUTION_ON);
 247:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12 */
 248:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 249:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 250:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if(chNum < ADC_SAR_Seq_1_SEQUENCED_CHANNELS_NUM)
 251:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 252:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 253:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRe
 122              		.loc 1 253 0
 123 007a 9A00     		lsl	r2, r3, #2
 124 007c 1D49     		ldr	r1, .L6+84
 125 007e 8C46     		mov	ip, r1
 126 0080 6244     		add	r2, r2, ip
 127 0082 8021     		mov	r1, #128
 128 0084 C900     		lsl	r1, r1, #3
 129 0086 1160     		str	r1, [r2]
 130              	.LVL8:
 254:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 255:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_SATURATE_EN_MASK) != 0u)
 256:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 257:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 258:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 259:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 260:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_RANGE_CTRL_EN_MASK) != 0u)
 261:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 262:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 263:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 264:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 265:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 266:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             else
 267:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 8


 268:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 CY_SET_REG32(ADC_SAR_Seq_1_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_SAR_Seq_1_INJ_T
 269:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 270:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_SATURATE_EN_MASK) != 0u)
 271:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 {
 272:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                     ADC_SAR_Seq_1_SAR_INTR_MASK_REG |= ADC_SAR_Seq_1_INJ_SATURATE_MASK;
 273:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 }
 274:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 275:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_RANGE_CTRL_EN_MASK) != 0
 276:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 {
 277:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                     ADC_SAR_Seq_1_SAR_INTR_MASK_REG |= ADC_SAR_Seq_1_INJ_RANGE_MASK;
 278:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 }
 279:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 280:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 281:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 282:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_ALT_RESOLUTION_ON) != 0u)
 283:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 284:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                counts = (int32)ADC_SAR_Seq_1_DEFAULT_MAX_WRK_ALT;
 285:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 286:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         else
 287:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 288:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                counts = (int32)ADC_SAR_Seq_1_SAR_WRK_MAX_12BIT;
 289:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 290:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 291:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_DIFFERENTIAL_EN) == 0u)
 292:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 293:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if((ADC_SAR_Seq_1_DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FSIGNED) && \
 294:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 (ADC_SAR_Seq_1_DEFAULT_NEG_INPUT_SEL == ADC_SAR_Seq_1__VREF))
 295:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = (int16)(counts / -2);
 297:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #else
 298:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = 0;
 131              		.loc 1 298 0
 132 0088 5900     		lsl	r1, r3, #1
 133 008a 0020     		mov	r0, #0
 134 008c 1A4A     		ldr	r2, .L6+88
 135 008e 8852     		strh	r0, [r1, r2]
 299:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FSIGNED */
 300:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 301:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         else    /* Differential channel */
 302:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 303:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FUNSIGNED)
 304:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = (int16)(counts / 2);
 306:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #else
 307:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = 0;
 308:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* end ADC_SAR_Seq_1_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FUNSIGNED 
 309:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 310:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_countsPer10Volt[chNum] = (int16)(((counts * ADC_SAR_Seq_1_10MV_COUNTS) +
 136              		.loc 1 311 0
 137 0090 9900     		lsl	r1, r3, #2
 138 0092 1A48     		ldr	r0, .L6+92
 139 0094 1A4A     		ldr	r2, .L6+96
 140 0096 8850     		str	r0, [r1, r2]
 232:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 141              		.loc 1 232 0
 142 0098 0133     		add	r3, r3, #1
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 9


 143              	.LVL9:
 144              	.L3:
 232:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 145              		.loc 1 232 0 is_stmt 0 discriminator 1
 146 009a 002B     		cmp	r3, #0
 147 009c EDD0     		beq	.L4
 312:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                             ADC_SAR_Seq_1_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_Seq_1_DEFAULT_VREF_MV_V
 313:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 314:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 148              		.loc 1 314 0 is_stmt 1
 149              		@ sp needed
 150 009e 08BD     		pop	{r3, pc}
 151              	.L7:
 152              		.align	2
 153              	.L6:
 154 00a0 00000000 		.word	ADC_SAR_Seq_1_ISR
 155 00a4 20001A40 		.word	1075445792
 156 00a8 80031A40 		.word	1075446656
 157 00ac C0021050 		.word	1343226560
 158 00b0 C0020050 		.word	1342177984
 159 00b4 00001A40 		.word	1075445760
 160 00b8 A4000080 		.word	-2147483484
 161 00bc 04001A40 		.word	1075445764
 162 00c0 0000FF07 		.word	134152192
 163 00c4 18001A40 		.word	1075445784
 164 00c8 1C001A40 		.word	1075445788
 165 00cc 04000400 		.word	262148
 166 00d0 10001A40 		.word	1075445776
 167 00d4 14001A40 		.word	1075445780
 168 00d8 00031A40 		.word	1075446528
 169 00dc 28021A40 		.word	1075446312
 170 00e0 38021A40 		.word	1075446328
 171 00e4 18021A40 		.word	1075446296
 172 00e8 000F1A40 		.word	1075449600
 173 00ec 30001A40 		.word	1075445808
 174 00f0 FFFFFFDF 		.word	-536870913
 175 00f4 80001A40 		.word	1075445888
 176 00f8 00000000 		.word	ADC_SAR_Seq_1_offset
 177 00fc 204E0000 		.word	20000
 178 0100 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 179              		.cfi_endproc
 180              	.LFE1:
 181              		.size	ADC_SAR_Seq_1_Init, .-ADC_SAR_Seq_1_Init
 182              		.section	.text.ADC_SAR_Seq_1_Enable,"ax",%progbits
 183              		.align	2
 184              		.global	ADC_SAR_Seq_1_Enable
 185              		.code	16
 186              		.thumb_func
 187              		.type	ADC_SAR_Seq_1_Enable, %function
 188              	ADC_SAR_Seq_1_Enable:
 189              	.LFB2:
 315:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 316:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 317:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_1_Enable
 318:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 319:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 320:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 10


 321:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Enables the clock and analog power for SAR ADC.
 322:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 323:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 324:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 325:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 326:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 327:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 328:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 329:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 330:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Enable(void)
 331:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 190              		.loc 1 331 0
 191              		.cfi_startproc
 192 0000 08B5     		push	{r3, lr}
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 3, -8
 195              		.cfi_offset 14, -4
 332:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if (0u == (ADC_SAR_Seq_1_SAR_CTRL_REG & ADC_SAR_Seq_1_ENABLE))
 196              		.loc 1 332 0
 197 0002 074B     		ldr	r3, .L10
 198 0004 1B68     		ldr	r3, [r3]
 199 0006 002B     		cmp	r3, #0
 200 0008 08DB     		blt	.L8
 333:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 334:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_CY_SAR_IP_VER != ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 335:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 336:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             while (0u != (ADC_SAR_Seq_1_SAR_STATUS_REG & ADC_SAR_Seq_1_STATUS_BUSY))
 337:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 338:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 340:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER != ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 341:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 342:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_ENABLE;
 201              		.loc 1 342 0
 202 000a 054A     		ldr	r2, .L10
 203 000c 1368     		ldr	r3, [r2]
 204 000e 8021     		mov	r1, #128
 205 0010 0906     		lsl	r1, r1, #24
 206 0012 0B43     		orr	r3, r1
 207 0014 1360     		str	r3, [r2]
 343:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 344:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CyDelayUs(ADC_SAR_Seq_1_10US_DELAY);         
 208              		.loc 1 345 0
 209 0016 0A20     		mov	r0, #10
 210 0018 FFF7FEFF 		bl	CyDelayUs
 211              	.LVL10:
 212              	.L8:
 346:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 347:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 213              		.loc 1 347 0
 214              		@ sp needed
 215 001c 08BD     		pop	{r3, pc}
 216              	.L11:
 217 001e C046     		.align	2
 218              	.L10:
 219 0020 00001A40 		.word	1075445760
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 11


 220              		.cfi_endproc
 221              	.LFE2:
 222              		.size	ADC_SAR_Seq_1_Enable, .-ADC_SAR_Seq_1_Enable
 223              		.section	.text.ADC_SAR_Seq_1_Start,"ax",%progbits
 224              		.align	2
 225              		.global	ADC_SAR_Seq_1_Start
 226              		.code	16
 227              		.thumb_func
 228              		.type	ADC_SAR_Seq_1_Start, %function
 229              	ADC_SAR_Seq_1_Start:
 230              	.LFB0:
  64:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* If not Initialized then initialize all required hardware and software */
 231              		.loc 1 64 0
 232              		.cfi_startproc
 233 0000 08B5     		push	{r3, lr}
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 3, -8
 236              		.cfi_offset 14, -4
  66:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 237              		.loc 1 66 0
 238 0002 064B     		ldr	r3, .L14
 239 0004 1B78     		ldrb	r3, [r3]
 240 0006 002B     		cmp	r3, #0
 241 0008 04D1     		bne	.L13
  68:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_initVar = 1u;
 242              		.loc 1 68 0
 243 000a FFF7FEFF 		bl	ADC_SAR_Seq_1_Init
 244              	.LVL11:
  69:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 245              		.loc 1 69 0
 246 000e 0122     		mov	r2, #1
 247 0010 024B     		ldr	r3, .L14
 248 0012 1A70     		strb	r2, [r3]
 249              	.L13:
  71:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 250              		.loc 1 71 0
 251 0014 FFF7FEFF 		bl	ADC_SAR_Seq_1_Enable
 252              	.LVL12:
  72:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 253              		.loc 1 72 0
 254              		@ sp needed
 255 0018 08BD     		pop	{r3, pc}
 256              	.L15:
 257 001a C046     		.align	2
 258              	.L14:
 259 001c 00000000 		.word	.LANCHOR0
 260              		.cfi_endproc
 261              	.LFE0:
 262              		.size	ADC_SAR_Seq_1_Start, .-ADC_SAR_Seq_1_Start
 263              		.section	.text.ADC_SAR_Seq_1_Stop,"ax",%progbits
 264              		.align	2
 265              		.global	ADC_SAR_Seq_1_Stop
 266              		.code	16
 267              		.thumb_func
 268              		.type	ADC_SAR_Seq_1_Stop, %function
 269              	ADC_SAR_Seq_1_Stop:
 270              	.LFB3:
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 12


 348:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 349:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 350:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 351:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Stop
 352:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 353:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 354:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 355:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mode.
 357:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 358:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 359:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 360:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 361:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 362:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 363:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 364:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 365:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Stop(void)
 366:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 271              		.loc 1 366 0
 272              		.cfi_startproc
 367:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG &= (uint32)~ADC_SAR_Seq_1_ENABLE;
 273              		.loc 1 367 0
 274 0000 024A     		ldr	r2, .L17
 275 0002 1368     		ldr	r3, [r2]
 276 0004 5B00     		lsl	r3, r3, #1
 277 0006 5B08     		lsr	r3, r3, #1
 278 0008 1360     		str	r3, [r2]
 368:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 279              		.loc 1 368 0
 280              		@ sp needed
 281 000a 7047     		bx	lr
 282              	.L18:
 283              		.align	2
 284              	.L17:
 285 000c 00001A40 		.word	1075445760
 286              		.cfi_endproc
 287              	.LFE3:
 288              		.size	ADC_SAR_Seq_1_Stop, .-ADC_SAR_Seq_1_Stop
 289              		.section	.text.ADC_SAR_Seq_1_StartConvert,"ax",%progbits
 290              		.align	2
 291              		.global	ADC_SAR_Seq_1_StartConvert
 292              		.code	16
 293              		.thumb_func
 294              		.type	ADC_SAR_Seq_1_StartConvert, %function
 295              	ADC_SAR_Seq_1_StartConvert:
 296              	.LFB4:
 369:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 370:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 371:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 372:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_StartConvert
 373:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 374:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 375:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 376:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description:
 377:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  For free running mode, this API starts the conversion process and it
 378:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  runs continuously.
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 13


 379:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 380:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  In a triggered mode, this routine triggers every conversion by
 381:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  every conversion has to start by this API.
 383:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 384:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 385:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 386:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 387:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 388:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 389:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 390:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 391:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_StartConvert(void)
 392:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 297              		.loc 1 392 0
 298              		.cfi_startproc
 393:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq_1__FREERUNNING)
 394:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG |= ADC_SAR_Seq_1_CONTINUOUS_EN;
 299              		.loc 1 394 0
 300 0000 034A     		ldr	r2, .L20
 301 0002 1368     		ldr	r3, [r2]
 302 0004 8021     		mov	r1, #128
 303 0006 4902     		lsl	r1, r1, #9
 304 0008 0B43     		orr	r3, r1
 305 000a 1360     		str	r3, [r2]
 395:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #else /* Firmware trigger */
 396:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_START_CTRL_REG = ADC_SAR_Seq_1_FW_TRIGGER;
 397:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* End ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq_1__FREERUNNING */
 398:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 399:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 306              		.loc 1 399 0
 307              		@ sp needed
 308 000c 7047     		bx	lr
 309              	.L21:
 310 000e C046     		.align	2
 311              	.L20:
 312 0010 04001A40 		.word	1075445764
 313              		.cfi_endproc
 314              	.LFE4:
 315              		.size	ADC_SAR_Seq_1_StartConvert, .-ADC_SAR_Seq_1_StartConvert
 316              		.section	.text.ADC_SAR_Seq_1_StopConvert,"ax",%progbits
 317              		.align	2
 318              		.global	ADC_SAR_Seq_1_StopConvert
 319              		.code	16
 320              		.thumb_func
 321              		.type	ADC_SAR_Seq_1_StopConvert, %function
 322              	ADC_SAR_Seq_1_StopConvert:
 323              	.LFB5:
 400:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 401:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 402:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 403:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_StopConvert
 404:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 405:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 406:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 407:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Forces the ADC to stop all conversions.
 408:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 14


 409:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 410:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 411:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 412:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 413:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 414:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 415:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 416:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_StopConvert(void)
 417:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 324              		.loc 1 417 0
 325              		.cfi_startproc
 418:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq_1__FREERUNNING)
 419:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_SAR_Seq_1_CONTINUOUS_EN);
 326              		.loc 1 419 0
 327 0000 024A     		ldr	r2, .L23
 328 0002 1168     		ldr	r1, [r2]
 329 0004 024B     		ldr	r3, .L23+4
 330 0006 0B40     		and	r3, r1
 331 0008 1360     		str	r3, [r2]
 420:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq_1__FREERUNNING */
 421:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 332              		.loc 1 421 0
 333              		@ sp needed
 334 000a 7047     		bx	lr
 335              	.L24:
 336              		.align	2
 337              	.L23:
 338 000c 04001A40 		.word	1075445764
 339 0010 FFFFFEFF 		.word	-65537
 340              		.cfi_endproc
 341              	.LFE5:
 342              		.size	ADC_SAR_Seq_1_StopConvert, .-ADC_SAR_Seq_1_StopConvert
 343              		.section	.text.ADC_SAR_Seq_1_IsEndConversion,"ax",%progbits
 344              		.align	2
 345              		.global	ADC_SAR_Seq_1_IsEndConversion
 346              		.code	16
 347              		.thumb_func
 348              		.type	ADC_SAR_Seq_1_IsEndConversion, %function
 349              	ADC_SAR_Seq_1_IsEndConversion:
 350              	.LFB6:
 422:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 423:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 424:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 425:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_IsEndConversion
 426:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 427:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 428:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 429:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description: Checks for ADC end of conversion for the case one
 430:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  as a software version of the EOC. This function provides the
 432:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  programmer with two options. In one mode this function
 433:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  immediately returns with the conversion status. In the other mode,
 434:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  the function does not return (blocking) until the conversion has
 435:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  completed.
 436:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 437:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 438:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 15


 439:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *                              for injection channel
 442:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *                              channel conversion
 444:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 445:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 446:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 449:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 450:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** uint32 ADC_SAR_Seq_1_IsEndConversion(uint32 retMode)
 451:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 351              		.loc 1 451 0
 352              		.cfi_startproc
 353              	.LVL13:
 354 0000 021C     		mov	r2, r0
 355              	.LVL14:
 452:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 status = 0u;
 453:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 454:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if((retMode & (ADC_SAR_Seq_1_RETURN_STATUS | ADC_SAR_Seq_1_WAIT_FOR_RESULT)) != 0u)
 356              		.loc 1 454 0
 357 0002 8307     		lsl	r3, r0, #30
 358 0004 0CD0     		beq	.L29
 359              	.LVL15:
 360              	.L28:
 455:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 456:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         do
 457:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 458:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             status = ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_EOS_MASK;
 361              		.loc 1 458 0 discriminator 2
 362 0006 074B     		ldr	r3, .L30
 363 0008 1B68     		ldr	r3, [r3]
 364 000a 0120     		mov	r0, #1
 365 000c 1840     		and	r0, r3
 366              	.LVL16:
 459:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }while((status == 0u) && ((retMode & ADC_SAR_Seq_1_WAIT_FOR_RESULT) != 0u));
 367              		.loc 1 459 0 discriminator 2
 368 000e 01D1     		bne	.L27
 369              		.loc 1 459 0 is_stmt 0 discriminator 1
 370 0010 9307     		lsl	r3, r2, #30
 371 0012 F8D4     		bmi	.L28
 372              	.L27:
 460:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 461:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if(status != 0u)
 373              		.loc 1 461 0 is_stmt 1
 374 0014 0028     		cmp	r0, #0
 375 0016 04D0     		beq	.L26
 462:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 463:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             /* Clear EOS bit */
 464:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ADC_SAR_Seq_1_SAR_INTR_REG = ADC_SAR_Seq_1_EOS_MASK;
 376              		.loc 1 464 0
 377 0018 0122     		mov	r2, #1
 378              	.LVL17:
 379 001a 024B     		ldr	r3, .L30
 380 001c 1A60     		str	r2, [r3]
 381 001e 00E0     		b	.L26
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 16


 382              	.LVL18:
 383              	.L29:
 452:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 384              		.loc 1 452 0
 385 0020 0020     		mov	r0, #0
 386              	.LVL19:
 387              	.L26:
 465:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 466:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 467:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 468:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 469:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((retMode & (ADC_SAR_Seq_1_RETURN_STATUS_INJ | ADC_SAR_Seq_1_WAIT_FOR_RESULT_INJ)) != 0u)
 470:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 471:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             do
 472:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 473:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 status |= ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_INJ_EOC_MASK;
 474:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }while(((status & ADC_SAR_Seq_1_INJ_EOC_MASK) == 0u) &&
 475:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                    ((retMode & ADC_SAR_Seq_1_WAIT_FOR_RESULT_INJ) != 0u));
 476:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 477:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((status & ADC_SAR_Seq_1_INJ_EOC_MASK) != 0u)
 478:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 479:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Clear Injection EOS bit */
 480:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_INTR_REG = ADC_SAR_Seq_1_INJ_EOC_MASK;
 481:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 482:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 483:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 484:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 485:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     return (status);
 486:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 388              		.loc 1 486 0
 389              		@ sp needed
 390 0022 7047     		bx	lr
 391              	.L31:
 392              		.align	2
 393              	.L30:
 394 0024 10021A40 		.word	1075446288
 395              		.cfi_endproc
 396              	.LFE6:
 397              		.size	ADC_SAR_Seq_1_IsEndConversion, .-ADC_SAR_Seq_1_IsEndConversion
 398              		.section	.text.ADC_SAR_Seq_1_GetResult16,"ax",%progbits
 399              		.align	2
 400              		.global	ADC_SAR_Seq_1_GetResult16
 401              		.code	16
 402              		.thumb_func
 403              		.type	ADC_SAR_Seq_1_GetResult16, %function
 404              	ADC_SAR_Seq_1_GetResult16:
 405              	.LFB7:
 487:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 488:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 489:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 490:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_GetResult16
 491:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 492:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 493:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 494:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Gets the data available in the SAR DATA register.
 495:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 496:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 17


 497:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 500:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 501:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Returns converted data as a signed 16-bit integer
 502:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 503:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 504:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** int16 ADC_SAR_Seq_1_GetResult16(uint32 chan)
 505:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 406              		.loc 1 505 0
 407              		.cfi_startproc
 408              	.LVL20:
 409 0000 10B5     		push	{r4, lr}
 410              		.cfi_def_cfa_offset 8
 411              		.cfi_offset 4, -8
 412              		.cfi_offset 14, -4
 413 0002 041E     		sub	r4, r0, #0
 506:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 result;
 507:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 508:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 414              		.loc 1 509 0
 415 0004 02D0     		beq	.L33
 416              		.loc 1 509 0 is_stmt 0 discriminator 1
 417 0006 0020     		mov	r0, #0
 418              	.LVL21:
 419 0008 FFF7FEFF 		bl	CyHalt
 420              	.LVL22:
 421              	.L33:
 510:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 511:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if(chan < ADC_SAR_Seq_1_SEQUENCED_CHANNELS_NUM)
 422              		.loc 1 511 0 is_stmt 1
 423 000c 002C     		cmp	r4, #0
 424 000e 07D1     		bne	.L35
 512:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 513:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) 
 425              		.loc 1 513 0
 426 0010 A400     		lsl	r4, r4, #2
 427              	.LVL23:
 428 0012 054B     		ldr	r3, .L36
 429 0014 9C46     		mov	ip, r3
 430 0016 6444     		add	r4, r4, ip
 431 0018 2068     		ldr	r0, [r4]
 432 001a 0004     		lsl	r0, r0, #16
 433 001c 000C     		lsr	r0, r0, #16
 434              	.LVL24:
 435 001e 00E0     		b	.L34
 436              	.LVL25:
 437              	.L35:
 514:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_RESULT_MASK;
 515:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 516:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     else
 517:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 518:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 519:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             result = ADC_SAR_Seq_1_SAR_INJ_RESULT_REG & ADC_SAR_Seq_1_RESULT_MASK;
 520:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else
 521:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             result = 0u;
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 18


 438              		.loc 1 521 0
 439 0020 0020     		mov	r0, #0
 440              	.LVL26:
 441              	.L34:
 522:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 523:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 524:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 525:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     return ( (int16)result );
 442              		.loc 1 525 0
 443 0022 00B2     		sxth	r0, r0
 444              	.LVL27:
 526:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 445              		.loc 1 526 0
 446              		@ sp needed
 447 0024 10BD     		pop	{r4, pc}
 448              	.L37:
 449 0026 C046     		.align	2
 450              	.L36:
 451 0028 80011A40 		.word	1075446144
 452              		.cfi_endproc
 453              	.LFE7:
 454              		.size	ADC_SAR_Seq_1_GetResult16, .-ADC_SAR_Seq_1_GetResult16
 455              		.section	.text.ADC_SAR_Seq_1_SetChanMask,"ax",%progbits
 456              		.align	2
 457              		.global	ADC_SAR_Seq_1_SetChanMask
 458              		.code	16
 459              		.thumb_func
 460              		.type	ADC_SAR_Seq_1_SetChanMask, %function
 461              	ADC_SAR_Seq_1_SetChanMask:
 462              	.LFB8:
 527:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 528:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 529:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 530:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetChanMask
 531:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 532:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 533:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 534:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel enable mask.
 535:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 536:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 537:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that will be
 538:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This API will not enable the injection channel.
 542:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Examples: If the component is setup to sequence through 8
 543:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 545:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 546:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 547:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 548:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 549:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetChanMask(uint32 mask)
 550:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 463              		.loc 1 550 0
 464              		.cfi_startproc
 465              	.LVL28:
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 19


 551:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CHAN_EN_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 466              		.loc 1 551 0
 467 0000 0123     		mov	r3, #1
 468 0002 1840     		and	r0, r3
 469              	.LVL29:
 470 0004 014B     		ldr	r3, .L39
 471 0006 1860     		str	r0, [r3]
 552:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 472              		.loc 1 552 0
 473              		@ sp needed
 474 0008 7047     		bx	lr
 475              	.L40:
 476 000a C046     		.align	2
 477              	.L39:
 478 000c 20001A40 		.word	1075445792
 479              		.cfi_endproc
 480              	.LFE8:
 481              		.size	ADC_SAR_Seq_1_SetChanMask, .-ADC_SAR_Seq_1_SetChanMask
 482              		.section	.text.ADC_SAR_Seq_1_SetLowLimit,"ax",%progbits
 483              		.align	2
 484              		.global	ADC_SAR_Seq_1_SetLowLimit
 485              		.code	16
 486              		.thumb_func
 487              		.type	ADC_SAR_Seq_1_SetLowLimit, %function
 488              	ADC_SAR_Seq_1_SetLowLimit:
 489              	.LFB9:
 553:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 554:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 555:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 556:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 557:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 558:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_EnableInjection
 559:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 560:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 561:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 562:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Enables the injection channel for the next scan only.
 563:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 564:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 565:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  None.
 566:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 567:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 568:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  None.
 569:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 570:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 571:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     void ADC_SAR_Seq_1_EnableInjection(void)
 572:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 573:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_INJ_CHAN_CONFIG_REG |= ADC_SAR_Seq_1_INJ_CHAN_EN;
 574:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 575:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 576:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 577:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 578:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 579:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 580:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetLowLimit
 581:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 582:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 583:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 20


 584:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the low limit parameter for a limit condition.
 585:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 586:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 587:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  lowLimit: The low limit for a limit condition.
 588:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 589:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 590:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 591:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 592:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 593:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetLowLimit(uint32 lowLimit)
 594:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 490              		.loc 1 594 0
 491              		.cfi_startproc
 492              	.LVL30:
 595:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_LOW_MASK);
 493              		.loc 1 595 0
 494 0000 054A     		ldr	r2, .L42
 495 0002 1368     		ldr	r3, [r2]
 496 0004 1B0C     		lsr	r3, r3, #16
 497 0006 1B04     		lsl	r3, r3, #16
 498 0008 1360     		str	r3, [r2]
 596:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= lowLimit & ADC_SAR_Seq_1_RANGE_LOW_MASK;
 499              		.loc 1 596 0
 500 000a 1368     		ldr	r3, [r2]
 501 000c 0004     		lsl	r0, r0, #16
 502              	.LVL31:
 503 000e 000C     		lsr	r0, r0, #16
 504 0010 1843     		orr	r0, r3
 505 0012 1060     		str	r0, [r2]
 597:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 506              		.loc 1 597 0
 507              		@ sp needed
 508 0014 7047     		bx	lr
 509              	.L43:
 510 0016 C046     		.align	2
 511              	.L42:
 512 0018 18001A40 		.word	1075445784
 513              		.cfi_endproc
 514              	.LFE9:
 515              		.size	ADC_SAR_Seq_1_SetLowLimit, .-ADC_SAR_Seq_1_SetLowLimit
 516              		.section	.text.ADC_SAR_Seq_1_SetHighLimit,"ax",%progbits
 517              		.align	2
 518              		.global	ADC_SAR_Seq_1_SetHighLimit
 519              		.code	16
 520              		.thumb_func
 521              		.type	ADC_SAR_Seq_1_SetHighLimit, %function
 522              	ADC_SAR_Seq_1_SetHighLimit:
 523              	.LFB10:
 598:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 599:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 600:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 601:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetHighLimit
 602:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 603:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 604:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 605:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the low limit parameter for a limit condition.
 606:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 21


 607:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 608:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  highLimit: The high limit for a limit condition.
 609:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 610:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 611:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 612:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 613:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 614:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetHighLimit(uint32 highLimit)
 615:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 524              		.loc 1 615 0
 525              		.cfi_startproc
 526              	.LVL32:
 616:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_HIGH_MASK);
 527              		.loc 1 616 0
 528 0000 044A     		ldr	r2, .L45
 529 0002 1368     		ldr	r3, [r2]
 530 0004 1B04     		lsl	r3, r3, #16
 531 0006 1B0C     		lsr	r3, r3, #16
 532 0008 1360     		str	r3, [r2]
 617:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_SAR_Seq_1_RANGE_HIGH_OFFSET);
 533              		.loc 1 617 0
 534 000a 1368     		ldr	r3, [r2]
 535 000c 0004     		lsl	r0, r0, #16
 536              	.LVL33:
 537 000e 1843     		orr	r0, r3
 538 0010 1060     		str	r0, [r2]
 618:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 539              		.loc 1 618 0
 540              		@ sp needed
 541 0012 7047     		bx	lr
 542              	.L46:
 543              		.align	2
 544              	.L45:
 545 0014 18001A40 		.word	1075445784
 546              		.cfi_endproc
 547              	.LFE10:
 548              		.size	ADC_SAR_Seq_1_SetHighLimit, .-ADC_SAR_Seq_1_SetHighLimit
 549              		.section	.text.ADC_SAR_Seq_1_SetLimitMask,"ax",%progbits
 550              		.align	2
 551              		.global	ADC_SAR_Seq_1_SetLimitMask
 552              		.code	16
 553              		.thumb_func
 554              		.type	ADC_SAR_Seq_1_SetLimitMask, %function
 555              	ADC_SAR_Seq_1_SetLimitMask:
 556              	.LFB11:
 619:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 620:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 621:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 622:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetLimitMask
 623:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 624:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 625:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 626:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel limit condition mask.
 627:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 628:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 629:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that may cause a
 630:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  limit condition interrupt. Setting bits for channels that do not exist
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 22


 631:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 634:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 635:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 636:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 637:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 638:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetLimitMask(uint32 mask)
 639:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 557              		.loc 1 639 0
 558              		.cfi_startproc
 559              	.LVL34:
 640:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 560              		.loc 1 640 0
 561 0000 0123     		mov	r3, #1
 562 0002 1840     		and	r0, r3
 563              	.LVL35:
 564 0004 014B     		ldr	r3, .L48
 565 0006 1860     		str	r0, [r3]
 641:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 566              		.loc 1 641 0
 567              		@ sp needed
 568 0008 7047     		bx	lr
 569              	.L49:
 570 000a C046     		.align	2
 571              	.L48:
 572 000c 38021A40 		.word	1075446328
 573              		.cfi_endproc
 574              	.LFE11:
 575              		.size	ADC_SAR_Seq_1_SetLimitMask, .-ADC_SAR_Seq_1_SetLimitMask
 576              		.section	.text.ADC_SAR_Seq_1_SetSatMask,"ax",%progbits
 577              		.align	2
 578              		.global	ADC_SAR_Seq_1_SetSatMask
 579              		.code	16
 580              		.thumb_func
 581              		.type	ADC_SAR_Seq_1_SetSatMask, %function
 582              	ADC_SAR_Seq_1_SetSatMask:
 583              	.LFB12:
 642:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 643:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 644:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 645:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetSatMask
 646:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 647:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 648:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 649:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel saturation event mask.
 650:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 651:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 652:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that may cause a
 653:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 657:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 658:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 659:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 660:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 23


 661:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetSatMask(uint32 mask)
 662:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 584              		.loc 1 662 0
 585              		.cfi_startproc
 586              	.LVL36:
 663:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 587              		.loc 1 663 0
 588 0000 0123     		mov	r3, #1
 589 0002 1840     		and	r0, r3
 590              	.LVL37:
 591 0004 014B     		ldr	r3, .L51
 592 0006 1860     		str	r0, [r3]
 664:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 593              		.loc 1 664 0
 594              		@ sp needed
 595 0008 7047     		bx	lr
 596              	.L52:
 597 000a C046     		.align	2
 598              	.L51:
 599 000c 28021A40 		.word	1075446312
 600              		.cfi_endproc
 601              	.LFE12:
 602              		.size	ADC_SAR_Seq_1_SetSatMask, .-ADC_SAR_Seq_1_SetSatMask
 603              		.section	.text.ADC_SAR_Seq_1_SetOffset,"ax",%progbits
 604              		.align	2
 605              		.global	ADC_SAR_Seq_1_SetOffset
 606              		.code	16
 607              		.thumb_func
 608              		.type	ADC_SAR_Seq_1_SetOffset, %function
 609              	ADC_SAR_Seq_1_SetOffset:
 610              	.LFB13:
 665:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 666:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 667:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 668:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetOffset
 669:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 670:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 671:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 672:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   Description: Sets the ADC offset which is used by the functions
 673:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   to substract the offset from the given reading
 675:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   before calculating the voltage conversion.
 676:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 677:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 678:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: ADC channel number.
 679:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  offset: This value is a measured value when the
 680:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *          inputs are shorted or connected to the same input voltage.
 681:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 682:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 683:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 684:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 685:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
 686:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Offset:  Modified to set the user provided offset.
 687:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 688:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 689:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetOffset(uint32 chan, int16 offset)
 690:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 24


 611              		.loc 1 690 0
 612              		.cfi_startproc
 613              	.LVL38:
 614 0000 38B5     		push	{r3, r4, r5, lr}
 615              		.cfi_def_cfa_offset 16
 616              		.cfi_offset 3, -16
 617              		.cfi_offset 4, -12
 618              		.cfi_offset 5, -8
 619              		.cfi_offset 14, -4
 620 0002 041C     		mov	r4, r0
 621 0004 0D1C     		mov	r5, r1
 691:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 622              		.loc 1 692 0
 623 0006 0028     		cmp	r0, #0
 624 0008 02D0     		beq	.L54
 625              		.loc 1 692 0 is_stmt 0 discriminator 1
 626 000a 0020     		mov	r0, #0
 627              	.LVL39:
 628 000c FFF7FEFF 		bl	CyHalt
 629              	.LVL40:
 630              	.L54:
 693:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 694:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_offset[chan] = offset;
 631              		.loc 1 694 0 is_stmt 1
 632 0010 6400     		lsl	r4, r4, #1
 633              	.LVL41:
 634 0012 014B     		ldr	r3, .L55
 635 0014 E552     		strh	r5, [r4, r3]
 695:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 636              		.loc 1 695 0
 637              		@ sp needed
 638 0016 38BD     		pop	{r3, r4, r5, pc}
 639              	.L56:
 640              		.align	2
 641              	.L55:
 642 0018 00000000 		.word	ADC_SAR_Seq_1_offset
 643              		.cfi_endproc
 644              	.LFE13:
 645              		.size	ADC_SAR_Seq_1_SetOffset, .-ADC_SAR_Seq_1_SetOffset
 646              		.section	.text.ADC_SAR_Seq_1_SetGain,"ax",%progbits
 647              		.align	2
 648              		.global	ADC_SAR_Seq_1_SetGain
 649              		.code	16
 650              		.thumb_func
 651              		.type	ADC_SAR_Seq_1_SetGain, %function
 652              	ADC_SAR_Seq_1_SetGain:
 653              	.LFB14:
 696:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 697:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 698:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 699:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetGain
 700:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 701:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 702:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 703:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  conversion functions below. This value is set by default by the
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 25


 705:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  reference and input range settings. It should only be used to further
 706:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  calibrate the ADC with a known input or if an external reference is
 707:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  conversion between ADC counts and voltage.
 710:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 711:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 712:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: ADC channel number.
 713:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 715:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 716:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 717:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 718:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
 719:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_CountsPer10Volt:  modified to set the ADC gain in counts
 720:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   per 10 volt.
 721:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 722:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 723:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetGain(uint32 chan, int32 adcGain)
 724:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 654              		.loc 1 724 0
 655              		.cfi_startproc
 656              	.LVL42:
 657 0000 38B5     		push	{r3, r4, r5, lr}
 658              		.cfi_def_cfa_offset 16
 659              		.cfi_offset 3, -16
 660              		.cfi_offset 4, -12
 661              		.cfi_offset 5, -8
 662              		.cfi_offset 14, -4
 663 0002 041C     		mov	r4, r0
 664 0004 0D1C     		mov	r5, r1
 725:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 665              		.loc 1 726 0
 666 0006 0028     		cmp	r0, #0
 667 0008 02D0     		beq	.L58
 668              		.loc 1 726 0 is_stmt 0 discriminator 1
 669 000a 0020     		mov	r0, #0
 670              	.LVL43:
 671 000c FFF7FEFF 		bl	CyHalt
 672              	.LVL44:
 673              	.L58:
 727:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 728:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_countsPer10Volt[chan] = adcGain;
 674              		.loc 1 728 0 is_stmt 1
 675 0010 A400     		lsl	r4, r4, #2
 676              	.LVL45:
 677 0012 014B     		ldr	r3, .L59
 678 0014 E550     		str	r5, [r4, r3]
 729:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 679              		.loc 1 729 0
 680              		@ sp needed
 681              	.LVL46:
 682 0016 38BD     		pop	{r3, r4, r5, pc}
 683              	.L60:
 684              		.align	2
 685              	.L59:
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 26


 686 0018 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 687              		.cfi_endproc
 688              	.LFE14:
 689              		.size	ADC_SAR_Seq_1_SetGain, .-ADC_SAR_Seq_1_SetGain
 690              		.global	__aeabi_idiv
 691              		.section	.text.ADC_SAR_Seq_1_CountsTo_mVolts,"ax",%progbits
 692              		.align	2
 693              		.global	ADC_SAR_Seq_1_CountsTo_mVolts
 694              		.code	16
 695              		.thumb_func
 696              		.type	ADC_SAR_Seq_1_CountsTo_mVolts, %function
 697              	ADC_SAR_Seq_1_CountsTo_mVolts:
 698              	.LFB15:
 730:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 731:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 732:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #if(ADC_SAR_Seq_1_DEFAULT_JUSTIFICATION_SEL == ADC_SAR_Seq_1__RIGHT)
 733:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 734:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 735:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 736:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_mVolts
 737:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 738:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 739:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 740:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function converts ADC counts to mVolts
 741:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 742:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 743:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 744:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 745:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  adcCounts: Result from the ADC conversion
 746:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 747:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 748:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in mVolts
 749:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 750:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 751:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 753:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 754:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 755:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 756:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int16 ADC_SAR_Seq_1_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 699              		.loc 1 757 0
 700              		.cfi_startproc
 701              	.LVL47:
 702 0000 38B5     		push	{r3, r4, r5, lr}
 703              		.cfi_def_cfa_offset 16
 704              		.cfi_offset 3, -16
 705              		.cfi_offset 4, -12
 706              		.cfi_offset 5, -8
 707              		.cfi_offset 14, -4
 708 0002 041C     		mov	r4, r0
 709 0004 0D1C     		mov	r5, r1
 758:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         int16 mVolts;
 759:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 760:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 710              		.loc 1 761 0
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 27


 711 0006 0028     		cmp	r0, #0
 712 0008 02D0     		beq	.L62
 713              		.loc 1 761 0 is_stmt 0 discriminator 1
 714 000a 0020     		mov	r0, #0
 715              	.LVL48:
 716 000c FFF7FEFF 		bl	CyHalt
 717              	.LVL49:
 718              	.L62:
 762:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 763:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 765:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 766:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 767:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 768:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 769:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 770:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 771:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 772:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 719              		.loc 1 772 0 is_stmt 1
 720 0010 6300     		lsl	r3, r4, #1
 721 0012 0F4A     		ldr	r2, .L65
 722 0014 995A     		ldrh	r1, [r3, r2]
 723 0016 691A     		sub	r1, r5, r1
 724 0018 09B2     		sxth	r1, r1
 725              	.LVL50:
 773:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 774:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         mVolts = (int16)((((int32)adcCounts * ADC_SAR_Seq_1_10MV_COUNTS) + ( (adcCounts > 0) ?
 726              		.loc 1 774 0
 727 001a 0E48     		ldr	r0, .L65+4
 728 001c 021C     		mov	r2, r0
 729 001e 4A43     		mul	r2, r1
 775:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 730              		.loc 1 775 0
 731 0020 0029     		cmp	r1, #0
 732 0022 06DD     		ble	.L63
 733              		.loc 1 775 0 is_stmt 0 discriminator 1
 734 0024 A300     		lsl	r3, r4, #2
 735 0026 0C49     		ldr	r1, .L65+8
 736              	.LVL51:
 737 0028 5B58     		ldr	r3, [r3, r1]
 738 002a D80F     		lsr	r0, r3, #31
 739 002c C018     		add	r0, r0, r3
 740 002e 4310     		asr	r3, r0, #1
 741 0030 06E0     		b	.L64
 742              	.LVL52:
 743              	.L63:
 744              		.loc 1 775 0 discriminator 2
 745 0032 A300     		lsl	r3, r4, #2
 746 0034 0849     		ldr	r1, .L65+8
 747              	.LVL53:
 748 0036 5B58     		ldr	r3, [r3, r1]
 749 0038 D80F     		lsr	r0, r3, #31
 750 003a C318     		add	r3, r0, r3
 751 003c 5B10     		asr	r3, r3, #1
 752 003e 5B42     		neg	r3, r3
 753              	.L64:
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 28


 774:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 754              		.loc 1 774 0 is_stmt 1
 755 0040 D018     		add	r0, r2, r3
 776:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  / ADC_SAR_Seq_1_countsPer10Volt[chan]);
 756              		.loc 1 776 0
 757 0042 A400     		lsl	r4, r4, #2
 758              	.LVL54:
 759 0044 044B     		ldr	r3, .L65+8
 760 0046 E158     		ldr	r1, [r4, r3]
 761 0048 FFF7FEFF 		bl	__aeabi_idiv
 762              	.LVL55:
 777:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 778:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( mVolts );
 763              		.loc 1 778 0
 764 004c 00B2     		sxth	r0, r0
 779:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 765              		.loc 1 779 0
 766              		@ sp needed
 767 004e 38BD     		pop	{r3, r4, r5, pc}
 768              	.L66:
 769              		.align	2
 770              	.L65:
 771 0050 00000000 		.word	ADC_SAR_Seq_1_offset
 772 0054 10270000 		.word	10000
 773 0058 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 774              		.cfi_endproc
 775              	.LFE15:
 776              		.size	ADC_SAR_Seq_1_CountsTo_mVolts, .-ADC_SAR_Seq_1_CountsTo_mVolts
 777              		.global	__aeabi_lmul
 778              		.global	__aeabi_ldivmod
 779              		.section	.text.ADC_SAR_Seq_1_CountsTo_uVolts,"ax",%progbits
 780              		.align	2
 781              		.global	ADC_SAR_Seq_1_CountsTo_uVolts
 782              		.code	16
 783              		.thumb_func
 784              		.type	ADC_SAR_Seq_1_CountsTo_uVolts, %function
 785              	ADC_SAR_Seq_1_CountsTo_uVolts:
 786              	.LFB16:
 780:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 781:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 782:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 783:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_uVolts
 784:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 785:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 786:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 787:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function converts ADC counts to micro Volts
 788:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 789:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 790:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 791:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 792:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  adcCounts: Result from the ADC conversion
 793:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 794:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 795:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in uVolts
 796:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 797:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 798:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to uVolts.
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 29


 799:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 800:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 801:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 802:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Theory:
 803:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  resolution.
 806:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 809:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 810:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int32 ADC_SAR_Seq_1_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 787              		.loc 1 811 0
 788              		.cfi_startproc
 789              	.LVL56:
 790 0000 38B5     		push	{r3, r4, r5, lr}
 791              		.cfi_def_cfa_offset 16
 792              		.cfi_offset 3, -16
 793              		.cfi_offset 4, -12
 794              		.cfi_offset 5, -8
 795              		.cfi_offset 14, -4
 796 0002 051C     		mov	r5, r0
 797 0004 0C1C     		mov	r4, r1
 812:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         int64 uVolts;
 813:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 814:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 798              		.loc 1 815 0
 799 0006 0028     		cmp	r0, #0
 800 0008 02D0     		beq	.L68
 801              		.loc 1 815 0 is_stmt 0 discriminator 1
 802 000a 0020     		mov	r0, #0
 803              	.LVL57:
 804 000c FFF7FEFF 		bl	CyHalt
 805              	.LVL58:
 806              	.L68:
 816:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 817:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 819:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 820:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 821:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 822:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 823:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 824:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 825:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 826:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 807              		.loc 1 826 0 is_stmt 1
 808 0010 6A00     		lsl	r2, r5, #1
 809 0012 084B     		ldr	r3, .L69
 810 0014 D05A     		ldrh	r0, [r2, r3]
 811 0016 201A     		sub	r0, r4, r0
 812 0018 00B2     		sxth	r0, r0
 813              	.LVL59:
 827:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 828:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         uVolts = ((int64)adcCounts * ADC_SAR_Seq_1_10UV_COUNTS) / ADC_SAR_Seq_1_countsPer10Volt[cha
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 30


 814              		.loc 1 828 0
 815 001a C117     		asr	r1, r0, #31
 816 001c 064A     		ldr	r2, .L69+4
 817 001e 0023     		mov	r3, #0
 818 0020 FFF7FEFF 		bl	__aeabi_lmul
 819              	.LVL60:
 820 0024 AD00     		lsl	r5, r5, #2
 821              	.LVL61:
 822 0026 054B     		ldr	r3, .L69+8
 823 0028 EA58     		ldr	r2, [r5, r3]
 824 002a D317     		asr	r3, r2, #31
 825 002c FFF7FEFF 		bl	__aeabi_ldivmod
 826              	.LVL62:
 829:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 830:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( (int32)uVolts );
 831:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 827              		.loc 1 831 0
 828              		@ sp needed
 829 0030 38BD     		pop	{r3, r4, r5, pc}
 830              	.L70:
 831 0032 C046     		.align	2
 832              	.L69:
 833 0034 00000000 		.word	ADC_SAR_Seq_1_offset
 834 0038 80969800 		.word	10000000
 835 003c 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 836              		.cfi_endproc
 837              	.LFE16:
 838              		.size	ADC_SAR_Seq_1_CountsTo_uVolts, .-ADC_SAR_Seq_1_CountsTo_uVolts
 839              		.global	__aeabi_i2f
 840              		.global	__aeabi_fmul
 841              		.global	__aeabi_fdiv
 842              		.section	.text.ADC_SAR_Seq_1_CountsTo_Volts,"ax",%progbits
 843              		.align	2
 844              		.global	ADC_SAR_Seq_1_CountsTo_Volts
 845              		.code	16
 846              		.thumb_func
 847              		.type	ADC_SAR_Seq_1_CountsTo_Volts, %function
 848              	ADC_SAR_Seq_1_CountsTo_Volts:
 849              	.LFB17:
 832:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 833:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 834:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 835:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_Volts
 836:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 837:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 838:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 839:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 841:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 842:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 843:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 844:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Result from the ADC conversion
 845:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 846:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 847:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in Volts
 848:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 849:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 31


 850:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to Volts.
 851:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 852:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 853:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 854:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 855:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     float32 ADC_SAR_Seq_1_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 850              		.loc 1 856 0
 851              		.cfi_startproc
 852              	.LVL63:
 853 0000 38B5     		push	{r3, r4, r5, lr}
 854              		.cfi_def_cfa_offset 16
 855              		.cfi_offset 3, -16
 856              		.cfi_offset 4, -12
 857              		.cfi_offset 5, -8
 858              		.cfi_offset 14, -4
 859 0002 041C     		mov	r4, r0
 860 0004 0D1C     		mov	r5, r1
 857:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         float32 volts;
 858:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 859:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 861              		.loc 1 860 0
 862 0006 0028     		cmp	r0, #0
 863 0008 02D0     		beq	.L72
 864              		.loc 1 860 0 is_stmt 0 discriminator 1
 865 000a 0020     		mov	r0, #0
 866              	.LVL64:
 867 000c FFF7FEFF 		bl	CyHalt
 868              	.LVL65:
 869              	.L72:
 861:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 862:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 864:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 865:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 866:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 867:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 868:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 869:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 870:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 871:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 870              		.loc 1 871 0 is_stmt 1
 871 0010 6200     		lsl	r2, r4, #1
 872 0012 0A4B     		ldr	r3, .L73
 873 0014 D05A     		ldrh	r0, [r2, r3]
 874 0016 281A     		sub	r0, r5, r0
 875 0018 00B2     		sxth	r0, r0
 876              	.LVL66:
 872:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 873:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         volts = ((float32)adcCounts * ADC_SAR_Seq_1_10V_COUNTS) / (float32)ADC_SAR_Seq_1_countsPer1
 877              		.loc 1 873 0
 878 001a FFF7FEFF 		bl	__aeabi_i2f
 879              	.LVL67:
 880 001e 0849     		ldr	r1, .L73+4
 881 0020 FFF7FEFF 		bl	__aeabi_fmul
 882              	.LVL68:
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 32


 883 0024 051C     		add	r5, r0, #0
 884 0026 A400     		lsl	r4, r4, #2
 885              	.LVL69:
 886 0028 064B     		ldr	r3, .L73+8
 887 002a E058     		ldr	r0, [r4, r3]
 888 002c FFF7FEFF 		bl	__aeabi_i2f
 889              	.LVL70:
 890 0030 011C     		add	r1, r0, #0
 891 0032 281C     		add	r0, r5, #0
 892 0034 FFF7FEFF 		bl	__aeabi_fdiv
 893              	.LVL71:
 874:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 875:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( volts );
 876:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 894              		.loc 1 876 0
 895              		@ sp needed
 896 0038 38BD     		pop	{r3, r4, r5, pc}
 897              	.L74:
 898 003a C046     		.align	2
 899              	.L73:
 900 003c 00000000 		.word	ADC_SAR_Seq_1_offset
 901 0040 00002041 		.word	1092616192
 902 0044 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 903              		.cfi_endproc
 904              	.LFE17:
 905              		.size	ADC_SAR_Seq_1_CountsTo_Volts, .-ADC_SAR_Seq_1_CountsTo_Volts
 906              		.comm	ADC_SAR_Seq_1_countsPer10Volt,4,4
 907              		.comm	ADC_SAR_Seq_1_offset,2,4
 908              		.global	ADC_SAR_Seq_1_initVar
 909              		.bss
 910              		.set	.LANCHOR0,. + 0
 911              		.type	ADC_SAR_Seq_1_initVar, %object
 912              		.size	ADC_SAR_Seq_1_initVar, 1
 913              	ADC_SAR_Seq_1_initVar:
 914 0000 00       		.space	1
 915              		.text
 916              	.Letext0:
 917              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 918              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 919              		.section	.debug_info,"",%progbits
 920              	.Ldebug_info0:
 921 0000 94050000 		.4byte	0x594
 922 0004 0400     		.2byte	0x4
 923 0006 00000000 		.4byte	.Ldebug_abbrev0
 924 000a 04       		.byte	0x4
 925 000b 01       		.uleb128 0x1
 926 000c 8A020000 		.4byte	.LASF61
 927 0010 01       		.byte	0x1
 928 0011 0F020000 		.4byte	.LASF62
 929 0015 2F030000 		.4byte	.LASF63
 930 0019 00000000 		.4byte	.Ldebug_ranges0+0
 931 001d 00000000 		.4byte	0
 932 0021 00000000 		.4byte	.Ldebug_line0
 933 0025 02       		.uleb128 0x2
 934 0026 01       		.byte	0x1
 935 0027 06       		.byte	0x6
 936 0028 DA000000 		.4byte	.LASF0
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 33


 937 002c 02       		.uleb128 0x2
 938 002d 01       		.byte	0x1
 939 002e 08       		.byte	0x8
 940 002f 9B030000 		.4byte	.LASF1
 941 0033 02       		.uleb128 0x2
 942 0034 02       		.byte	0x2
 943 0035 05       		.byte	0x5
 944 0036 A9030000 		.4byte	.LASF2
 945 003a 02       		.uleb128 0x2
 946 003b 02       		.byte	0x2
 947 003c 07       		.byte	0x7
 948 003d C3010000 		.4byte	.LASF3
 949 0041 02       		.uleb128 0x2
 950 0042 04       		.byte	0x4
 951 0043 05       		.byte	0x5
 952 0044 25010000 		.4byte	.LASF4
 953 0048 02       		.uleb128 0x2
 954 0049 04       		.byte	0x4
 955 004a 07       		.byte	0x7
 956 004b A1010000 		.4byte	.LASF5
 957 004f 02       		.uleb128 0x2
 958 0050 08       		.byte	0x8
 959 0051 05       		.byte	0x5
 960 0052 CC000000 		.4byte	.LASF6
 961 0056 02       		.uleb128 0x2
 962 0057 08       		.byte	0x8
 963 0058 07       		.byte	0x7
 964 0059 86000000 		.4byte	.LASF7
 965 005d 03       		.uleb128 0x3
 966 005e 04       		.byte	0x4
 967 005f 05       		.byte	0x5
 968 0060 696E7400 		.ascii	"int\000"
 969 0064 02       		.uleb128 0x2
 970 0065 04       		.byte	0x4
 971 0066 07       		.byte	0x7
 972 0067 8D010000 		.4byte	.LASF8
 973 006b 04       		.uleb128 0x4
 974 006c 2E010000 		.4byte	.LASF9
 975 0070 02       		.byte	0x2
 976 0071 9801     		.2byte	0x198
 977 0073 2C000000 		.4byte	0x2c
 978 0077 04       		.uleb128 0x4
 979 0078 15000000 		.4byte	.LASF10
 980 007c 02       		.byte	0x2
 981 007d 9901     		.2byte	0x199
 982 007f 3A000000 		.4byte	0x3a
 983 0083 04       		.uleb128 0x4
 984 0084 45010000 		.4byte	.LASF11
 985 0088 02       		.byte	0x2
 986 0089 9A01     		.2byte	0x19a
 987 008b 48000000 		.4byte	0x48
 988 008f 04       		.uleb128 0x4
 989 0090 6F040000 		.4byte	.LASF12
 990 0094 02       		.byte	0x2
 991 0095 9C01     		.2byte	0x19c
 992 0097 33000000 		.4byte	0x33
 993 009b 04       		.uleb128 0x4
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 34


 994 009c 01010000 		.4byte	.LASF13
 995 00a0 02       		.byte	0x2
 996 00a1 9D01     		.2byte	0x19d
 997 00a3 41000000 		.4byte	0x41
 998 00a7 04       		.uleb128 0x4
 999 00a8 38020000 		.4byte	.LASF14
 1000 00ac 02       		.byte	0x2
 1001 00ad 9E01     		.2byte	0x19e
 1002 00af B3000000 		.4byte	0xb3
 1003 00b3 02       		.uleb128 0x2
 1004 00b4 04       		.byte	0x4
 1005 00b5 04       		.byte	0x4
 1006 00b6 5B030000 		.4byte	.LASF15
 1007 00ba 02       		.uleb128 0x2
 1008 00bb 08       		.byte	0x8
 1009 00bc 04       		.byte	0x4
 1010 00bd 3E010000 		.4byte	.LASF16
 1011 00c1 04       		.uleb128 0x4
 1012 00c2 18030000 		.4byte	.LASF17
 1013 00c6 02       		.byte	0x2
 1014 00c7 A301     		.2byte	0x1a3
 1015 00c9 4F000000 		.4byte	0x4f
 1016 00cd 02       		.uleb128 0x2
 1017 00ce 01       		.byte	0x1
 1018 00cf 08       		.byte	0x8
 1019 00d0 F5030000 		.4byte	.LASF18
 1020 00d4 04       		.uleb128 0x4
 1021 00d5 09020000 		.4byte	.LASF19
 1022 00d9 02       		.byte	0x2
 1023 00da 4402     		.2byte	0x244
 1024 00dc E0000000 		.4byte	0xe0
 1025 00e0 05       		.uleb128 0x5
 1026 00e1 83000000 		.4byte	0x83
 1027 00e5 04       		.uleb128 0x4
 1028 00e6 FA030000 		.4byte	.LASF20
 1029 00ea 02       		.byte	0x2
 1030 00eb 5402     		.2byte	0x254
 1031 00ed F1000000 		.4byte	0xf1
 1032 00f1 06       		.uleb128 0x6
 1033 00f2 04       		.byte	0x4
 1034 00f3 F7000000 		.4byte	0xf7
 1035 00f7 07       		.uleb128 0x7
 1036 00f8 02       		.uleb128 0x2
 1037 00f9 04       		.byte	0x4
 1038 00fa 07       		.byte	0x7
 1039 00fb 40020000 		.4byte	.LASF21
 1040 00ff 08       		.uleb128 0x8
 1041 0100 1C000000 		.4byte	.LASF25
 1042 0104 01       		.byte	0x1
 1043 0105 5E       		.byte	0x5e
 1044 0106 00000000 		.4byte	.LFB1
 1045 010a 04010000 		.4byte	.LFE1-.LFB1
 1046 010e 01       		.uleb128 0x1
 1047 010f 9C       		.byte	0x9c
 1048 0110 69010000 		.4byte	0x169
 1049 0114 09       		.uleb128 0x9
 1050 0115 EA030000 		.4byte	.LASF22
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 35


 1051 0119 01       		.byte	0x1
 1052 011a 60       		.byte	0x60
 1053 011b 83000000 		.4byte	0x83
 1054 011f 00000000 		.4byte	.LLST0
 1055 0123 09       		.uleb128 0x9
 1056 0124 B9010000 		.4byte	.LASF23
 1057 0128 01       		.byte	0x1
 1058 0129 61       		.byte	0x61
 1059 012a 83000000 		.4byte	0x83
 1060 012e 1F000000 		.4byte	.LLST1
 1061 0132 09       		.uleb128 0x9
 1062 0133 37000000 		.4byte	.LASF24
 1063 0137 01       		.byte	0x1
 1064 0138 62       		.byte	0x62
 1065 0139 9B000000 		.4byte	0x9b
 1066 013d 62000000 		.4byte	.LLST2
 1067 0141 0A       		.uleb128 0xa
 1068 0142 0A000000 		.4byte	.LVL0
 1069 0146 49050000 		.4byte	0x549
 1070 014a 59010000 		.4byte	0x159
 1071 014e 0B       		.uleb128 0xb
 1072 014f 01       		.uleb128 0x1
 1073 0150 51       		.byte	0x51
 1074 0151 01       		.uleb128 0x1
 1075 0152 33       		.byte	0x33
 1076 0153 0B       		.uleb128 0xb
 1077 0154 01       		.uleb128 0x1
 1078 0155 50       		.byte	0x50
 1079 0156 01       		.uleb128 0x1
 1080 0157 3E       		.byte	0x3e
 1081 0158 00       		.byte	0
 1082 0159 0C       		.uleb128 0xc
 1083 015a 12000000 		.4byte	.LVL1
 1084 015e 5F050000 		.4byte	0x55f
 1085 0162 0B       		.uleb128 0xb
 1086 0163 01       		.uleb128 0x1
 1087 0164 50       		.byte	0x50
 1088 0165 01       		.uleb128 0x1
 1089 0166 3E       		.byte	0x3e
 1090 0167 00       		.byte	0
 1091 0168 00       		.byte	0
 1092 0169 0D       		.uleb128 0xd
 1093 016a 9D000000 		.4byte	.LASF26
 1094 016e 01       		.byte	0x1
 1095 016f 4A01     		.2byte	0x14a
 1096 0171 00000000 		.4byte	.LFB2
 1097 0175 24000000 		.4byte	.LFE2-.LFB2
 1098 0179 01       		.uleb128 0x1
 1099 017a 9C       		.byte	0x9c
 1100 017b 8F010000 		.4byte	0x18f
 1101 017f 0C       		.uleb128 0xc
 1102 0180 1C000000 		.4byte	.LVL10
 1103 0184 79050000 		.4byte	0x579
 1104 0188 0B       		.uleb128 0xb
 1105 0189 01       		.uleb128 0x1
 1106 018a 50       		.byte	0x50
 1107 018b 01       		.uleb128 0x1
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 36


 1108 018c 3A       		.byte	0x3a
 1109 018d 00       		.byte	0
 1110 018e 00       		.byte	0
 1111 018f 08       		.uleb128 0x8
 1112 0190 72000000 		.4byte	.LASF27
 1113 0194 01       		.byte	0x1
 1114 0195 3F       		.byte	0x3f
 1115 0196 00000000 		.4byte	.LFB0
 1116 019a 20000000 		.4byte	.LFE0-.LFB0
 1117 019e 01       		.uleb128 0x1
 1118 019f 9C       		.byte	0x9c
 1119 01a0 B7010000 		.4byte	0x1b7
 1120 01a4 0E       		.uleb128 0xe
 1121 01a5 0E000000 		.4byte	.LVL11
 1122 01a9 FF000000 		.4byte	0xff
 1123 01ad 0E       		.uleb128 0xe
 1124 01ae 18000000 		.4byte	.LVL12
 1125 01b2 69010000 		.4byte	0x169
 1126 01b6 00       		.byte	0
 1127 01b7 0F       		.uleb128 0xf
 1128 01b8 77030000 		.4byte	.LASF28
 1129 01bc 01       		.byte	0x1
 1130 01bd 6D01     		.2byte	0x16d
 1131 01bf 00000000 		.4byte	.LFB3
 1132 01c3 10000000 		.4byte	.LFE3-.LFB3
 1133 01c7 01       		.uleb128 0x1
 1134 01c8 9C       		.byte	0x9c
 1135 01c9 0F       		.uleb128 0xf
 1136 01ca 3E000000 		.4byte	.LASF29
 1137 01ce 01       		.byte	0x1
 1138 01cf 8701     		.2byte	0x187
 1139 01d1 00000000 		.4byte	.LFB4
 1140 01d5 14000000 		.4byte	.LFE4-.LFB4
 1141 01d9 01       		.uleb128 0x1
 1142 01da 9C       		.byte	0x9c
 1143 01db 0F       		.uleb128 0xf
 1144 01dc 70020000 		.4byte	.LASF30
 1145 01e0 01       		.byte	0x1
 1146 01e1 A001     		.2byte	0x1a0
 1147 01e3 00000000 		.4byte	.LFB5
 1148 01e7 14000000 		.4byte	.LFE5-.LFB5
 1149 01eb 01       		.uleb128 0x1
 1150 01ec 9C       		.byte	0x9c
 1151 01ed 10       		.uleb128 0x10
 1152 01ee 52020000 		.4byte	.LASF32
 1153 01f2 01       		.byte	0x1
 1154 01f3 C201     		.2byte	0x1c2
 1155 01f5 83000000 		.4byte	0x83
 1156 01f9 00000000 		.4byte	.LFB6
 1157 01fd 28000000 		.4byte	.LFE6-.LFB6
 1158 0201 01       		.uleb128 0x1
 1159 0202 9C       		.byte	0x9c
 1160 0203 28020000 		.4byte	0x228
 1161 0207 11       		.uleb128 0x11
 1162 0208 6F010000 		.4byte	.LASF34
 1163 020c 01       		.byte	0x1
 1164 020d C201     		.2byte	0x1c2
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 37


 1165 020f 83000000 		.4byte	0x83
 1166 0213 78000000 		.4byte	.LLST3
 1167 0217 12       		.uleb128 0x12
 1168 0218 50040000 		.4byte	.LASF31
 1169 021c 01       		.byte	0x1
 1170 021d C401     		.2byte	0x1c4
 1171 021f 83000000 		.4byte	0x83
 1172 0223 BD000000 		.4byte	.LLST4
 1173 0227 00       		.byte	0
 1174 0228 10       		.uleb128 0x10
 1175 0229 B2000000 		.4byte	.LASF33
 1176 022d 01       		.byte	0x1
 1177 022e F801     		.2byte	0x1f8
 1178 0230 8F000000 		.4byte	0x8f
 1179 0234 00000000 		.4byte	.LFB7
 1180 0238 2C000000 		.4byte	.LFE7-.LFB7
 1181 023c 01       		.uleb128 0x1
 1182 023d 9C       		.byte	0x9c
 1183 023e 72020000 		.4byte	0x272
 1184 0242 11       		.uleb128 0x11
 1185 0243 F0030000 		.4byte	.LASF35
 1186 0247 01       		.byte	0x1
 1187 0248 F801     		.2byte	0x1f8
 1188 024a 83000000 		.4byte	0x83
 1189 024e F3000000 		.4byte	.LLST5
 1190 0252 12       		.uleb128 0x12
 1191 0253 90040000 		.4byte	.LASF36
 1192 0257 01       		.byte	0x1
 1193 0258 FA01     		.2byte	0x1fa
 1194 025a 83000000 		.4byte	0x83
 1195 025e 38010000 		.4byte	.LLST6
 1196 0262 0C       		.uleb128 0xc
 1197 0263 0C000000 		.4byte	.LVL22
 1198 0267 8A050000 		.4byte	0x58a
 1199 026b 0B       		.uleb128 0xb
 1200 026c 01       		.uleb128 0x1
 1201 026d 50       		.byte	0x50
 1202 026e 01       		.uleb128 0x1
 1203 026f 30       		.byte	0x30
 1204 0270 00       		.byte	0
 1205 0271 00       		.byte	0
 1206 0272 0D       		.uleb128 0xd
 1207 0273 D0030000 		.4byte	.LASF37
 1208 0277 01       		.byte	0x1
 1209 0278 2502     		.2byte	0x225
 1210 027a 00000000 		.4byte	.LFB8
 1211 027e 10000000 		.4byte	.LFE8-.LFB8
 1212 0282 01       		.uleb128 0x1
 1213 0283 9C       		.byte	0x9c
 1214 0284 99020000 		.4byte	0x299
 1215 0288 11       		.uleb128 0x11
 1216 0289 4C010000 		.4byte	.LASF38
 1217 028d 01       		.byte	0x1
 1218 028e 2502     		.2byte	0x225
 1219 0290 83000000 		.4byte	0x83
 1220 0294 56010000 		.4byte	.LLST7
 1221 0298 00       		.byte	0
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 38


 1222 0299 0D       		.uleb128 0xd
 1223 029a 07040000 		.4byte	.LASF39
 1224 029e 01       		.byte	0x1
 1225 029f 5102     		.2byte	0x251
 1226 02a1 00000000 		.4byte	.LFB9
 1227 02a5 1C000000 		.4byte	.LFE9-.LFB9
 1228 02a9 01       		.uleb128 0x1
 1229 02aa 9C       		.byte	0x9c
 1230 02ab C0020000 		.4byte	0x2c0
 1231 02af 11       		.uleb128 0x11
 1232 02b0 49020000 		.4byte	.LASF40
 1233 02b4 01       		.byte	0x1
 1234 02b5 5102     		.2byte	0x251
 1235 02b7 83000000 		.4byte	0x83
 1236 02bb 77010000 		.4byte	.LLST8
 1237 02bf 00       		.byte	0
 1238 02c0 0D       		.uleb128 0xd
 1239 02c1 E6000000 		.4byte	.LASF41
 1240 02c5 01       		.byte	0x1
 1241 02c6 6602     		.2byte	0x266
 1242 02c8 00000000 		.4byte	.LFB10
 1243 02cc 18000000 		.4byte	.LFE10-.LFB10
 1244 02d0 01       		.uleb128 0x1
 1245 02d1 9C       		.byte	0x9c
 1246 02d2 E7020000 		.4byte	0x2e7
 1247 02d6 11       		.uleb128 0x11
 1248 02d7 8A030000 		.4byte	.LASF42
 1249 02db 01       		.byte	0x1
 1250 02dc 6602     		.2byte	0x266
 1251 02de 83000000 		.4byte	0x83
 1252 02e2 98010000 		.4byte	.LLST9
 1253 02e6 00       		.byte	0
 1254 02e7 0D       		.uleb128 0xd
 1255 02e8 75040000 		.4byte	.LASF43
 1256 02ec 01       		.byte	0x1
 1257 02ed 7E02     		.2byte	0x27e
 1258 02ef 00000000 		.4byte	.LFB11
 1259 02f3 10000000 		.4byte	.LFE11-.LFB11
 1260 02f7 01       		.uleb128 0x1
 1261 02f8 9C       		.byte	0x9c
 1262 02f9 0E030000 		.4byte	0x30e
 1263 02fd 11       		.uleb128 0x11
 1264 02fe 4C010000 		.4byte	.LASF38
 1265 0302 01       		.byte	0x1
 1266 0303 7E02     		.2byte	0x27e
 1267 0305 83000000 		.4byte	0x83
 1268 0309 B9010000 		.4byte	.LLST10
 1269 030d 00       		.byte	0
 1270 030e 0D       		.uleb128 0xd
 1271 030f 59000000 		.4byte	.LASF44
 1272 0313 01       		.byte	0x1
 1273 0314 9502     		.2byte	0x295
 1274 0316 00000000 		.4byte	.LFB12
 1275 031a 10000000 		.4byte	.LFE12-.LFB12
 1276 031e 01       		.uleb128 0x1
 1277 031f 9C       		.byte	0x9c
 1278 0320 35030000 		.4byte	0x335
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 39


 1279 0324 11       		.uleb128 0x11
 1280 0325 4C010000 		.4byte	.LASF38
 1281 0329 01       		.byte	0x1
 1282 032a 9502     		.2byte	0x295
 1283 032c 83000000 		.4byte	0x83
 1284 0330 DA010000 		.4byte	.LLST11
 1285 0334 00       		.byte	0
 1286 0335 0D       		.uleb128 0xd
 1287 0336 57040000 		.4byte	.LASF45
 1288 033a 01       		.byte	0x1
 1289 033b B102     		.2byte	0x2b1
 1290 033d 00000000 		.4byte	.LFB13
 1291 0341 1C000000 		.4byte	.LFE13-.LFB13
 1292 0345 01       		.uleb128 0x1
 1293 0346 9C       		.byte	0x9c
 1294 0347 7B030000 		.4byte	0x37b
 1295 034b 11       		.uleb128 0x11
 1296 034c F0030000 		.4byte	.LASF35
 1297 0350 01       		.byte	0x1
 1298 0351 B102     		.2byte	0x2b1
 1299 0353 83000000 		.4byte	0x83
 1300 0357 FB010000 		.4byte	.LLST12
 1301 035b 11       		.uleb128 0x11
 1302 035c 21040000 		.4byte	.LASF46
 1303 0360 01       		.byte	0x1
 1304 0361 B102     		.2byte	0x2b1
 1305 0363 8F000000 		.4byte	0x8f
 1306 0367 27020000 		.4byte	.LLST13
 1307 036b 0C       		.uleb128 0xc
 1308 036c 10000000 		.4byte	.LVL40
 1309 0370 8A050000 		.4byte	0x58a
 1310 0374 0B       		.uleb128 0xb
 1311 0375 01       		.uleb128 0x1
 1312 0376 50       		.byte	0x50
 1313 0377 01       		.uleb128 0x1
 1314 0378 30       		.byte	0x30
 1315 0379 00       		.byte	0
 1316 037a 00       		.byte	0
 1317 037b 0D       		.uleb128 0xd
 1318 037c 61030000 		.4byte	.LASF47
 1319 0380 01       		.byte	0x1
 1320 0381 D302     		.2byte	0x2d3
 1321 0383 00000000 		.4byte	.LFB14
 1322 0387 1C000000 		.4byte	.LFE14-.LFB14
 1323 038b 01       		.uleb128 0x1
 1324 038c 9C       		.byte	0x9c
 1325 038d C1030000 		.4byte	0x3c1
 1326 0391 11       		.uleb128 0x11
 1327 0392 F0030000 		.4byte	.LASF35
 1328 0396 01       		.byte	0x1
 1329 0397 D302     		.2byte	0x2d3
 1330 0399 83000000 		.4byte	0x83
 1331 039d 48020000 		.4byte	.LLST14
 1332 03a1 11       		.uleb128 0x11
 1333 03a2 2F000000 		.4byte	.LASF48
 1334 03a6 01       		.byte	0x1
 1335 03a7 D302     		.2byte	0x2d3
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 40


 1336 03a9 9B000000 		.4byte	0x9b
 1337 03ad 74020000 		.4byte	.LLST15
 1338 03b1 0C       		.uleb128 0xc
 1339 03b2 10000000 		.4byte	.LVL44
 1340 03b6 8A050000 		.4byte	0x58a
 1341 03ba 0B       		.uleb128 0xb
 1342 03bb 01       		.uleb128 0x1
 1343 03bc 50       		.byte	0x50
 1344 03bd 01       		.uleb128 0x1
 1345 03be 30       		.byte	0x30
 1346 03bf 00       		.byte	0
 1347 03c0 00       		.byte	0
 1348 03c1 13       		.uleb128 0x13
 1349 03c2 51010000 		.4byte	.LASF49
 1350 03c6 01       		.byte	0x1
 1351 03c7 F402     		.2byte	0x2f4
 1352 03c9 8F000000 		.4byte	0x8f
 1353 03cd 00000000 		.4byte	.LFB15
 1354 03d1 5C000000 		.4byte	.LFE15-.LFB15
 1355 03d5 01       		.uleb128 0x1
 1356 03d6 9C       		.byte	0x9c
 1357 03d7 19040000 		.4byte	0x419
 1358 03db 11       		.uleb128 0x11
 1359 03dc F0030000 		.4byte	.LASF35
 1360 03e0 01       		.byte	0x1
 1361 03e1 F402     		.2byte	0x2f4
 1362 03e3 83000000 		.4byte	0x83
 1363 03e7 A4020000 		.4byte	.LLST16
 1364 03eb 11       		.uleb128 0x11
 1365 03ec 28040000 		.4byte	.LASF50
 1366 03f0 01       		.byte	0x1
 1367 03f1 F402     		.2byte	0x2f4
 1368 03f3 8F000000 		.4byte	0x8f
 1369 03f7 D0020000 		.4byte	.LLST17
 1370 03fb 14       		.uleb128 0x14
 1371 03fc 02020000 		.4byte	.LASF51
 1372 0400 01       		.byte	0x1
 1373 0401 F602     		.2byte	0x2f6
 1374 0403 8F000000 		.4byte	0x8f
 1375 0407 01       		.uleb128 0x1
 1376 0408 50       		.byte	0x50
 1377 0409 0C       		.uleb128 0xc
 1378 040a 10000000 		.4byte	.LVL49
 1379 040e 8A050000 		.4byte	0x58a
 1380 0412 0B       		.uleb128 0xb
 1381 0413 01       		.uleb128 0x1
 1382 0414 50       		.byte	0x50
 1383 0415 01       		.uleb128 0x1
 1384 0416 30       		.byte	0x30
 1385 0417 00       		.byte	0
 1386 0418 00       		.byte	0
 1387 0419 13       		.uleb128 0x13
 1388 041a 07010000 		.4byte	.LASF52
 1389 041e 01       		.byte	0x1
 1390 041f 2A03     		.2byte	0x32a
 1391 0421 9B000000 		.4byte	0x9b
 1392 0425 00000000 		.4byte	.LFB16
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 41


 1393 0429 40000000 		.4byte	.LFE16-.LFB16
 1394 042d 01       		.uleb128 0x1
 1395 042e 9C       		.byte	0x9c
 1396 042f 6F040000 		.4byte	0x46f
 1397 0433 11       		.uleb128 0x11
 1398 0434 F0030000 		.4byte	.LASF35
 1399 0438 01       		.byte	0x1
 1400 0439 2A03     		.2byte	0x32a
 1401 043b 83000000 		.4byte	0x83
 1402 043f 07030000 		.4byte	.LLST18
 1403 0443 11       		.uleb128 0x11
 1404 0444 28040000 		.4byte	.LASF50
 1405 0448 01       		.byte	0x1
 1406 0449 2A03     		.2byte	0x32a
 1407 044b 8F000000 		.4byte	0x8f
 1408 044f 33030000 		.4byte	.LLST19
 1409 0453 15       		.uleb128 0x15
 1410 0454 9A010000 		.4byte	.LASF64
 1411 0458 01       		.byte	0x1
 1412 0459 2C03     		.2byte	0x32c
 1413 045b C1000000 		.4byte	0xc1
 1414 045f 0C       		.uleb128 0xc
 1415 0460 10000000 		.4byte	.LVL58
 1416 0464 8A050000 		.4byte	0x58a
 1417 0468 0B       		.uleb128 0xb
 1418 0469 01       		.uleb128 0x1
 1419 046a 50       		.byte	0x50
 1420 046b 01       		.uleb128 0x1
 1421 046c 30       		.byte	0x30
 1422 046d 00       		.byte	0
 1423 046e 00       		.byte	0
 1424 046f 13       		.uleb128 0x13
 1425 0470 B3030000 		.4byte	.LASF53
 1426 0474 01       		.byte	0x1
 1427 0475 5703     		.2byte	0x357
 1428 0477 A7000000 		.4byte	0xa7
 1429 047b 00000000 		.4byte	.LFB17
 1430 047f 48000000 		.4byte	.LFE17-.LFB17
 1431 0483 01       		.uleb128 0x1
 1432 0484 9C       		.byte	0x9c
 1433 0485 C7040000 		.4byte	0x4c7
 1434 0489 11       		.uleb128 0x11
 1435 048a F0030000 		.4byte	.LASF35
 1436 048e 01       		.byte	0x1
 1437 048f 5703     		.2byte	0x357
 1438 0491 83000000 		.4byte	0x83
 1439 0495 5F030000 		.4byte	.LLST20
 1440 0499 11       		.uleb128 0x11
 1441 049a 28040000 		.4byte	.LASF50
 1442 049e 01       		.byte	0x1
 1443 049f 5703     		.2byte	0x357
 1444 04a1 8F000000 		.4byte	0x8f
 1445 04a5 8B030000 		.4byte	.LLST21
 1446 04a9 14       		.uleb128 0x14
 1447 04aa B3010000 		.4byte	.LASF54
 1448 04ae 01       		.byte	0x1
 1449 04af 5903     		.2byte	0x359
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 42


 1450 04b1 A7000000 		.4byte	0xa7
 1451 04b5 01       		.uleb128 0x1
 1452 04b6 50       		.byte	0x50
 1453 04b7 0C       		.uleb128 0xc
 1454 04b8 10000000 		.4byte	.LVL65
 1455 04bc 8A050000 		.4byte	0x58a
 1456 04c0 0B       		.uleb128 0xb
 1457 04c1 01       		.uleb128 0x1
 1458 04c2 50       		.byte	0x50
 1459 04c3 01       		.uleb128 0x1
 1460 04c4 30       		.byte	0x30
 1461 04c5 00       		.byte	0
 1462 04c6 00       		.byte	0
 1463 04c7 16       		.uleb128 0x16
 1464 04c8 83000000 		.4byte	0x83
 1465 04cc D7040000 		.4byte	0x4d7
 1466 04d0 17       		.uleb128 0x17
 1467 04d1 F8000000 		.4byte	0xf8
 1468 04d5 00       		.byte	0
 1469 04d6 00       		.byte	0
 1470 04d7 18       		.uleb128 0x18
 1471 04d8 E5010000 		.4byte	.LASF55
 1472 04dc 01       		.byte	0x1
 1473 04dd 21       		.byte	0x21
 1474 04de E7040000 		.4byte	0x4e7
 1475 04e2 04       		.byte	0x4
 1476 04e3 00       		.byte	0
 1477 04e4 04       		.byte	0x4
 1478 04e5 00       		.byte	0
 1479 04e6 00       		.byte	0
 1480 04e7 19       		.uleb128 0x19
 1481 04e8 C7040000 		.4byte	0x4c7
 1482 04ec 1A       		.uleb128 0x1a
 1483 04ed 77010000 		.4byte	.LASF56
 1484 04f1 01       		.byte	0x1
 1485 04f2 18       		.byte	0x18
 1486 04f3 6B000000 		.4byte	0x6b
 1487 04f7 05       		.uleb128 0x5
 1488 04f8 03       		.byte	0x3
 1489 04f9 00000000 		.4byte	ADC_SAR_Seq_1_initVar
 1490 04fd 16       		.uleb128 0x16
 1491 04fe 8F000000 		.4byte	0x8f
 1492 0502 0D050000 		.4byte	0x50d
 1493 0506 17       		.uleb128 0x17
 1494 0507 F8000000 		.4byte	0xf8
 1495 050b 00       		.byte	0
 1496 050c 00       		.byte	0
 1497 050d 1A       		.uleb128 0x1a
 1498 050e 00000000 		.4byte	.LASF57
 1499 0512 01       		.byte	0x1
 1500 0513 19       		.byte	0x19
 1501 0514 1E050000 		.4byte	0x51e
 1502 0518 05       		.uleb128 0x5
 1503 0519 03       		.byte	0x3
 1504 051a 00000000 		.4byte	ADC_SAR_Seq_1_offset
 1505 051e 05       		.uleb128 0x5
 1506 051f FD040000 		.4byte	0x4fd
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 43


 1507 0523 16       		.uleb128 0x16
 1508 0524 9B000000 		.4byte	0x9b
 1509 0528 33050000 		.4byte	0x533
 1510 052c 17       		.uleb128 0x17
 1511 052d F8000000 		.4byte	0xf8
 1512 0531 00       		.byte	0
 1513 0532 00       		.byte	0
 1514 0533 1A       		.uleb128 0x1a
 1515 0534 32040000 		.4byte	.LASF58
 1516 0538 01       		.byte	0x1
 1517 0539 1A       		.byte	0x1a
 1518 053a 44050000 		.4byte	0x544
 1519 053e 05       		.uleb128 0x5
 1520 053f 03       		.byte	0x3
 1521 0540 00000000 		.4byte	ADC_SAR_Seq_1_countsPer10Volt
 1522 0544 05       		.uleb128 0x5
 1523 0545 23050000 		.4byte	0x523
 1524 0549 1B       		.uleb128 0x1b
 1525 054a 1E030000 		.4byte	.LASF59
 1526 054e 03       		.byte	0x3
 1527 054f BE       		.byte	0xbe
 1528 0550 5F050000 		.4byte	0x55f
 1529 0554 1C       		.uleb128 0x1c
 1530 0555 6B000000 		.4byte	0x6b
 1531 0559 1C       		.uleb128 0x1c
 1532 055a 6B000000 		.4byte	0x6b
 1533 055e 00       		.byte	0
 1534 055f 1D       		.uleb128 0x1d
 1535 0560 D6010000 		.4byte	.LASF65
 1536 0564 03       		.byte	0x3
 1537 0565 BB       		.byte	0xbb
 1538 0566 E5000000 		.4byte	0xe5
 1539 056a 79050000 		.4byte	0x579
 1540 056e 1C       		.uleb128 0x1c
 1541 056f 6B000000 		.4byte	0x6b
 1542 0573 1C       		.uleb128 0x1c
 1543 0574 E5000000 		.4byte	0xe5
 1544 0578 00       		.byte	0
 1545 0579 1B       		.uleb128 0x1b
 1546 057a 34010000 		.4byte	.LASF60
 1547 057e 03       		.byte	0x3
 1548 057f D8       		.byte	0xd8
 1549 0580 8A050000 		.4byte	0x58a
 1550 0584 1C       		.uleb128 0x1c
 1551 0585 77000000 		.4byte	0x77
 1552 0589 00       		.byte	0
 1553 058a 1E       		.uleb128 0x1e
 1554 058b 94030000 		.4byte	.LASF66
 1555 058f 03       		.byte	0x3
 1556 0590 E5       		.byte	0xe5
 1557 0591 1C       		.uleb128 0x1c
 1558 0592 6B000000 		.4byte	0x6b
 1559 0596 00       		.byte	0
 1560 0597 00       		.byte	0
 1561              		.section	.debug_abbrev,"",%progbits
 1562              	.Ldebug_abbrev0:
 1563 0000 01       		.uleb128 0x1
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 44


 1564 0001 11       		.uleb128 0x11
 1565 0002 01       		.byte	0x1
 1566 0003 25       		.uleb128 0x25
 1567 0004 0E       		.uleb128 0xe
 1568 0005 13       		.uleb128 0x13
 1569 0006 0B       		.uleb128 0xb
 1570 0007 03       		.uleb128 0x3
 1571 0008 0E       		.uleb128 0xe
 1572 0009 1B       		.uleb128 0x1b
 1573 000a 0E       		.uleb128 0xe
 1574 000b 55       		.uleb128 0x55
 1575 000c 17       		.uleb128 0x17
 1576 000d 11       		.uleb128 0x11
 1577 000e 01       		.uleb128 0x1
 1578 000f 10       		.uleb128 0x10
 1579 0010 17       		.uleb128 0x17
 1580 0011 00       		.byte	0
 1581 0012 00       		.byte	0
 1582 0013 02       		.uleb128 0x2
 1583 0014 24       		.uleb128 0x24
 1584 0015 00       		.byte	0
 1585 0016 0B       		.uleb128 0xb
 1586 0017 0B       		.uleb128 0xb
 1587 0018 3E       		.uleb128 0x3e
 1588 0019 0B       		.uleb128 0xb
 1589 001a 03       		.uleb128 0x3
 1590 001b 0E       		.uleb128 0xe
 1591 001c 00       		.byte	0
 1592 001d 00       		.byte	0
 1593 001e 03       		.uleb128 0x3
 1594 001f 24       		.uleb128 0x24
 1595 0020 00       		.byte	0
 1596 0021 0B       		.uleb128 0xb
 1597 0022 0B       		.uleb128 0xb
 1598 0023 3E       		.uleb128 0x3e
 1599 0024 0B       		.uleb128 0xb
 1600 0025 03       		.uleb128 0x3
 1601 0026 08       		.uleb128 0x8
 1602 0027 00       		.byte	0
 1603 0028 00       		.byte	0
 1604 0029 04       		.uleb128 0x4
 1605 002a 16       		.uleb128 0x16
 1606 002b 00       		.byte	0
 1607 002c 03       		.uleb128 0x3
 1608 002d 0E       		.uleb128 0xe
 1609 002e 3A       		.uleb128 0x3a
 1610 002f 0B       		.uleb128 0xb
 1611 0030 3B       		.uleb128 0x3b
 1612 0031 05       		.uleb128 0x5
 1613 0032 49       		.uleb128 0x49
 1614 0033 13       		.uleb128 0x13
 1615 0034 00       		.byte	0
 1616 0035 00       		.byte	0
 1617 0036 05       		.uleb128 0x5
 1618 0037 35       		.uleb128 0x35
 1619 0038 00       		.byte	0
 1620 0039 49       		.uleb128 0x49
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 45


 1621 003a 13       		.uleb128 0x13
 1622 003b 00       		.byte	0
 1623 003c 00       		.byte	0
 1624 003d 06       		.uleb128 0x6
 1625 003e 0F       		.uleb128 0xf
 1626 003f 00       		.byte	0
 1627 0040 0B       		.uleb128 0xb
 1628 0041 0B       		.uleb128 0xb
 1629 0042 49       		.uleb128 0x49
 1630 0043 13       		.uleb128 0x13
 1631 0044 00       		.byte	0
 1632 0045 00       		.byte	0
 1633 0046 07       		.uleb128 0x7
 1634 0047 15       		.uleb128 0x15
 1635 0048 00       		.byte	0
 1636 0049 27       		.uleb128 0x27
 1637 004a 19       		.uleb128 0x19
 1638 004b 00       		.byte	0
 1639 004c 00       		.byte	0
 1640 004d 08       		.uleb128 0x8
 1641 004e 2E       		.uleb128 0x2e
 1642 004f 01       		.byte	0x1
 1643 0050 3F       		.uleb128 0x3f
 1644 0051 19       		.uleb128 0x19
 1645 0052 03       		.uleb128 0x3
 1646 0053 0E       		.uleb128 0xe
 1647 0054 3A       		.uleb128 0x3a
 1648 0055 0B       		.uleb128 0xb
 1649 0056 3B       		.uleb128 0x3b
 1650 0057 0B       		.uleb128 0xb
 1651 0058 27       		.uleb128 0x27
 1652 0059 19       		.uleb128 0x19
 1653 005a 11       		.uleb128 0x11
 1654 005b 01       		.uleb128 0x1
 1655 005c 12       		.uleb128 0x12
 1656 005d 06       		.uleb128 0x6
 1657 005e 40       		.uleb128 0x40
 1658 005f 18       		.uleb128 0x18
 1659 0060 9742     		.uleb128 0x2117
 1660 0062 19       		.uleb128 0x19
 1661 0063 01       		.uleb128 0x1
 1662 0064 13       		.uleb128 0x13
 1663 0065 00       		.byte	0
 1664 0066 00       		.byte	0
 1665 0067 09       		.uleb128 0x9
 1666 0068 34       		.uleb128 0x34
 1667 0069 00       		.byte	0
 1668 006a 03       		.uleb128 0x3
 1669 006b 0E       		.uleb128 0xe
 1670 006c 3A       		.uleb128 0x3a
 1671 006d 0B       		.uleb128 0xb
 1672 006e 3B       		.uleb128 0x3b
 1673 006f 0B       		.uleb128 0xb
 1674 0070 49       		.uleb128 0x49
 1675 0071 13       		.uleb128 0x13
 1676 0072 02       		.uleb128 0x2
 1677 0073 17       		.uleb128 0x17
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 46


 1678 0074 00       		.byte	0
 1679 0075 00       		.byte	0
 1680 0076 0A       		.uleb128 0xa
 1681 0077 898201   		.uleb128 0x4109
 1682 007a 01       		.byte	0x1
 1683 007b 11       		.uleb128 0x11
 1684 007c 01       		.uleb128 0x1
 1685 007d 31       		.uleb128 0x31
 1686 007e 13       		.uleb128 0x13
 1687 007f 01       		.uleb128 0x1
 1688 0080 13       		.uleb128 0x13
 1689 0081 00       		.byte	0
 1690 0082 00       		.byte	0
 1691 0083 0B       		.uleb128 0xb
 1692 0084 8A8201   		.uleb128 0x410a
 1693 0087 00       		.byte	0
 1694 0088 02       		.uleb128 0x2
 1695 0089 18       		.uleb128 0x18
 1696 008a 9142     		.uleb128 0x2111
 1697 008c 18       		.uleb128 0x18
 1698 008d 00       		.byte	0
 1699 008e 00       		.byte	0
 1700 008f 0C       		.uleb128 0xc
 1701 0090 898201   		.uleb128 0x4109
 1702 0093 01       		.byte	0x1
 1703 0094 11       		.uleb128 0x11
 1704 0095 01       		.uleb128 0x1
 1705 0096 31       		.uleb128 0x31
 1706 0097 13       		.uleb128 0x13
 1707 0098 00       		.byte	0
 1708 0099 00       		.byte	0
 1709 009a 0D       		.uleb128 0xd
 1710 009b 2E       		.uleb128 0x2e
 1711 009c 01       		.byte	0x1
 1712 009d 3F       		.uleb128 0x3f
 1713 009e 19       		.uleb128 0x19
 1714 009f 03       		.uleb128 0x3
 1715 00a0 0E       		.uleb128 0xe
 1716 00a1 3A       		.uleb128 0x3a
 1717 00a2 0B       		.uleb128 0xb
 1718 00a3 3B       		.uleb128 0x3b
 1719 00a4 05       		.uleb128 0x5
 1720 00a5 27       		.uleb128 0x27
 1721 00a6 19       		.uleb128 0x19
 1722 00a7 11       		.uleb128 0x11
 1723 00a8 01       		.uleb128 0x1
 1724 00a9 12       		.uleb128 0x12
 1725 00aa 06       		.uleb128 0x6
 1726 00ab 40       		.uleb128 0x40
 1727 00ac 18       		.uleb128 0x18
 1728 00ad 9742     		.uleb128 0x2117
 1729 00af 19       		.uleb128 0x19
 1730 00b0 01       		.uleb128 0x1
 1731 00b1 13       		.uleb128 0x13
 1732 00b2 00       		.byte	0
 1733 00b3 00       		.byte	0
 1734 00b4 0E       		.uleb128 0xe
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 47


 1735 00b5 898201   		.uleb128 0x4109
 1736 00b8 00       		.byte	0
 1737 00b9 11       		.uleb128 0x11
 1738 00ba 01       		.uleb128 0x1
 1739 00bb 31       		.uleb128 0x31
 1740 00bc 13       		.uleb128 0x13
 1741 00bd 00       		.byte	0
 1742 00be 00       		.byte	0
 1743 00bf 0F       		.uleb128 0xf
 1744 00c0 2E       		.uleb128 0x2e
 1745 00c1 00       		.byte	0
 1746 00c2 3F       		.uleb128 0x3f
 1747 00c3 19       		.uleb128 0x19
 1748 00c4 03       		.uleb128 0x3
 1749 00c5 0E       		.uleb128 0xe
 1750 00c6 3A       		.uleb128 0x3a
 1751 00c7 0B       		.uleb128 0xb
 1752 00c8 3B       		.uleb128 0x3b
 1753 00c9 05       		.uleb128 0x5
 1754 00ca 27       		.uleb128 0x27
 1755 00cb 19       		.uleb128 0x19
 1756 00cc 11       		.uleb128 0x11
 1757 00cd 01       		.uleb128 0x1
 1758 00ce 12       		.uleb128 0x12
 1759 00cf 06       		.uleb128 0x6
 1760 00d0 40       		.uleb128 0x40
 1761 00d1 18       		.uleb128 0x18
 1762 00d2 9742     		.uleb128 0x2117
 1763 00d4 19       		.uleb128 0x19
 1764 00d5 00       		.byte	0
 1765 00d6 00       		.byte	0
 1766 00d7 10       		.uleb128 0x10
 1767 00d8 2E       		.uleb128 0x2e
 1768 00d9 01       		.byte	0x1
 1769 00da 3F       		.uleb128 0x3f
 1770 00db 19       		.uleb128 0x19
 1771 00dc 03       		.uleb128 0x3
 1772 00dd 0E       		.uleb128 0xe
 1773 00de 3A       		.uleb128 0x3a
 1774 00df 0B       		.uleb128 0xb
 1775 00e0 3B       		.uleb128 0x3b
 1776 00e1 05       		.uleb128 0x5
 1777 00e2 27       		.uleb128 0x27
 1778 00e3 19       		.uleb128 0x19
 1779 00e4 49       		.uleb128 0x49
 1780 00e5 13       		.uleb128 0x13
 1781 00e6 11       		.uleb128 0x11
 1782 00e7 01       		.uleb128 0x1
 1783 00e8 12       		.uleb128 0x12
 1784 00e9 06       		.uleb128 0x6
 1785 00ea 40       		.uleb128 0x40
 1786 00eb 18       		.uleb128 0x18
 1787 00ec 9742     		.uleb128 0x2117
 1788 00ee 19       		.uleb128 0x19
 1789 00ef 01       		.uleb128 0x1
 1790 00f0 13       		.uleb128 0x13
 1791 00f1 00       		.byte	0
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 48


 1792 00f2 00       		.byte	0
 1793 00f3 11       		.uleb128 0x11
 1794 00f4 05       		.uleb128 0x5
 1795 00f5 00       		.byte	0
 1796 00f6 03       		.uleb128 0x3
 1797 00f7 0E       		.uleb128 0xe
 1798 00f8 3A       		.uleb128 0x3a
 1799 00f9 0B       		.uleb128 0xb
 1800 00fa 3B       		.uleb128 0x3b
 1801 00fb 05       		.uleb128 0x5
 1802 00fc 49       		.uleb128 0x49
 1803 00fd 13       		.uleb128 0x13
 1804 00fe 02       		.uleb128 0x2
 1805 00ff 17       		.uleb128 0x17
 1806 0100 00       		.byte	0
 1807 0101 00       		.byte	0
 1808 0102 12       		.uleb128 0x12
 1809 0103 34       		.uleb128 0x34
 1810 0104 00       		.byte	0
 1811 0105 03       		.uleb128 0x3
 1812 0106 0E       		.uleb128 0xe
 1813 0107 3A       		.uleb128 0x3a
 1814 0108 0B       		.uleb128 0xb
 1815 0109 3B       		.uleb128 0x3b
 1816 010a 05       		.uleb128 0x5
 1817 010b 49       		.uleb128 0x49
 1818 010c 13       		.uleb128 0x13
 1819 010d 02       		.uleb128 0x2
 1820 010e 17       		.uleb128 0x17
 1821 010f 00       		.byte	0
 1822 0110 00       		.byte	0
 1823 0111 13       		.uleb128 0x13
 1824 0112 2E       		.uleb128 0x2e
 1825 0113 01       		.byte	0x1
 1826 0114 3F       		.uleb128 0x3f
 1827 0115 19       		.uleb128 0x19
 1828 0116 03       		.uleb128 0x3
 1829 0117 0E       		.uleb128 0xe
 1830 0118 3A       		.uleb128 0x3a
 1831 0119 0B       		.uleb128 0xb
 1832 011a 3B       		.uleb128 0x3b
 1833 011b 05       		.uleb128 0x5
 1834 011c 27       		.uleb128 0x27
 1835 011d 19       		.uleb128 0x19
 1836 011e 49       		.uleb128 0x49
 1837 011f 13       		.uleb128 0x13
 1838 0120 11       		.uleb128 0x11
 1839 0121 01       		.uleb128 0x1
 1840 0122 12       		.uleb128 0x12
 1841 0123 06       		.uleb128 0x6
 1842 0124 40       		.uleb128 0x40
 1843 0125 18       		.uleb128 0x18
 1844 0126 9642     		.uleb128 0x2116
 1845 0128 19       		.uleb128 0x19
 1846 0129 01       		.uleb128 0x1
 1847 012a 13       		.uleb128 0x13
 1848 012b 00       		.byte	0
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 49


 1849 012c 00       		.byte	0
 1850 012d 14       		.uleb128 0x14
 1851 012e 34       		.uleb128 0x34
 1852 012f 00       		.byte	0
 1853 0130 03       		.uleb128 0x3
 1854 0131 0E       		.uleb128 0xe
 1855 0132 3A       		.uleb128 0x3a
 1856 0133 0B       		.uleb128 0xb
 1857 0134 3B       		.uleb128 0x3b
 1858 0135 05       		.uleb128 0x5
 1859 0136 49       		.uleb128 0x49
 1860 0137 13       		.uleb128 0x13
 1861 0138 02       		.uleb128 0x2
 1862 0139 18       		.uleb128 0x18
 1863 013a 00       		.byte	0
 1864 013b 00       		.byte	0
 1865 013c 15       		.uleb128 0x15
 1866 013d 34       		.uleb128 0x34
 1867 013e 00       		.byte	0
 1868 013f 03       		.uleb128 0x3
 1869 0140 0E       		.uleb128 0xe
 1870 0141 3A       		.uleb128 0x3a
 1871 0142 0B       		.uleb128 0xb
 1872 0143 3B       		.uleb128 0x3b
 1873 0144 05       		.uleb128 0x5
 1874 0145 49       		.uleb128 0x49
 1875 0146 13       		.uleb128 0x13
 1876 0147 00       		.byte	0
 1877 0148 00       		.byte	0
 1878 0149 16       		.uleb128 0x16
 1879 014a 01       		.uleb128 0x1
 1880 014b 01       		.byte	0x1
 1881 014c 49       		.uleb128 0x49
 1882 014d 13       		.uleb128 0x13
 1883 014e 01       		.uleb128 0x1
 1884 014f 13       		.uleb128 0x13
 1885 0150 00       		.byte	0
 1886 0151 00       		.byte	0
 1887 0152 17       		.uleb128 0x17
 1888 0153 21       		.uleb128 0x21
 1889 0154 00       		.byte	0
 1890 0155 49       		.uleb128 0x49
 1891 0156 13       		.uleb128 0x13
 1892 0157 2F       		.uleb128 0x2f
 1893 0158 0B       		.uleb128 0xb
 1894 0159 00       		.byte	0
 1895 015a 00       		.byte	0
 1896 015b 18       		.uleb128 0x18
 1897 015c 34       		.uleb128 0x34
 1898 015d 00       		.byte	0
 1899 015e 03       		.uleb128 0x3
 1900 015f 0E       		.uleb128 0xe
 1901 0160 3A       		.uleb128 0x3a
 1902 0161 0B       		.uleb128 0xb
 1903 0162 3B       		.uleb128 0x3b
 1904 0163 0B       		.uleb128 0xb
 1905 0164 49       		.uleb128 0x49
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 50


 1906 0165 13       		.uleb128 0x13
 1907 0166 1C       		.uleb128 0x1c
 1908 0167 0A       		.uleb128 0xa
 1909 0168 00       		.byte	0
 1910 0169 00       		.byte	0
 1911 016a 19       		.uleb128 0x19
 1912 016b 26       		.uleb128 0x26
 1913 016c 00       		.byte	0
 1914 016d 49       		.uleb128 0x49
 1915 016e 13       		.uleb128 0x13
 1916 016f 00       		.byte	0
 1917 0170 00       		.byte	0
 1918 0171 1A       		.uleb128 0x1a
 1919 0172 34       		.uleb128 0x34
 1920 0173 00       		.byte	0
 1921 0174 03       		.uleb128 0x3
 1922 0175 0E       		.uleb128 0xe
 1923 0176 3A       		.uleb128 0x3a
 1924 0177 0B       		.uleb128 0xb
 1925 0178 3B       		.uleb128 0x3b
 1926 0179 0B       		.uleb128 0xb
 1927 017a 49       		.uleb128 0x49
 1928 017b 13       		.uleb128 0x13
 1929 017c 3F       		.uleb128 0x3f
 1930 017d 19       		.uleb128 0x19
 1931 017e 02       		.uleb128 0x2
 1932 017f 18       		.uleb128 0x18
 1933 0180 00       		.byte	0
 1934 0181 00       		.byte	0
 1935 0182 1B       		.uleb128 0x1b
 1936 0183 2E       		.uleb128 0x2e
 1937 0184 01       		.byte	0x1
 1938 0185 3F       		.uleb128 0x3f
 1939 0186 19       		.uleb128 0x19
 1940 0187 03       		.uleb128 0x3
 1941 0188 0E       		.uleb128 0xe
 1942 0189 3A       		.uleb128 0x3a
 1943 018a 0B       		.uleb128 0xb
 1944 018b 3B       		.uleb128 0x3b
 1945 018c 0B       		.uleb128 0xb
 1946 018d 27       		.uleb128 0x27
 1947 018e 19       		.uleb128 0x19
 1948 018f 3C       		.uleb128 0x3c
 1949 0190 19       		.uleb128 0x19
 1950 0191 01       		.uleb128 0x1
 1951 0192 13       		.uleb128 0x13
 1952 0193 00       		.byte	0
 1953 0194 00       		.byte	0
 1954 0195 1C       		.uleb128 0x1c
 1955 0196 05       		.uleb128 0x5
 1956 0197 00       		.byte	0
 1957 0198 49       		.uleb128 0x49
 1958 0199 13       		.uleb128 0x13
 1959 019a 00       		.byte	0
 1960 019b 00       		.byte	0
 1961 019c 1D       		.uleb128 0x1d
 1962 019d 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 51


 1963 019e 01       		.byte	0x1
 1964 019f 3F       		.uleb128 0x3f
 1965 01a0 19       		.uleb128 0x19
 1966 01a1 03       		.uleb128 0x3
 1967 01a2 0E       		.uleb128 0xe
 1968 01a3 3A       		.uleb128 0x3a
 1969 01a4 0B       		.uleb128 0xb
 1970 01a5 3B       		.uleb128 0x3b
 1971 01a6 0B       		.uleb128 0xb
 1972 01a7 27       		.uleb128 0x27
 1973 01a8 19       		.uleb128 0x19
 1974 01a9 49       		.uleb128 0x49
 1975 01aa 13       		.uleb128 0x13
 1976 01ab 3C       		.uleb128 0x3c
 1977 01ac 19       		.uleb128 0x19
 1978 01ad 01       		.uleb128 0x1
 1979 01ae 13       		.uleb128 0x13
 1980 01af 00       		.byte	0
 1981 01b0 00       		.byte	0
 1982 01b1 1E       		.uleb128 0x1e
 1983 01b2 2E       		.uleb128 0x2e
 1984 01b3 01       		.byte	0x1
 1985 01b4 3F       		.uleb128 0x3f
 1986 01b5 19       		.uleb128 0x19
 1987 01b6 03       		.uleb128 0x3
 1988 01b7 0E       		.uleb128 0xe
 1989 01b8 3A       		.uleb128 0x3a
 1990 01b9 0B       		.uleb128 0xb
 1991 01ba 3B       		.uleb128 0x3b
 1992 01bb 0B       		.uleb128 0xb
 1993 01bc 27       		.uleb128 0x27
 1994 01bd 19       		.uleb128 0x19
 1995 01be 3C       		.uleb128 0x3c
 1996 01bf 19       		.uleb128 0x19
 1997 01c0 00       		.byte	0
 1998 01c1 00       		.byte	0
 1999 01c2 00       		.byte	0
 2000              		.section	.debug_loc,"",%progbits
 2001              	.Ldebug_loc0:
 2002              	.LLST0:
 2003 0000 76000000 		.4byte	.LVL5
 2004 0004 7A000000 		.4byte	.LVL7
 2005 0008 0200     		.2byte	0x2
 2006 000a 30       		.byte	0x30
 2007 000b 9F       		.byte	0x9f
 2008 000c 7A000000 		.4byte	.LVL7
 2009 0010 04010000 		.4byte	.LFE1
 2010 0014 0100     		.2byte	0x1
 2011 0016 53       		.byte	0x53
 2012 0017 00000000 		.4byte	0
 2013 001b 00000000 		.4byte	0
 2014              	.LLST1:
 2015 001f 6E000000 		.4byte	.LVL2
 2016 0023 72000000 		.4byte	.LVL3
 2017 0027 0100     		.2byte	0x1
 2018 0029 50       		.byte	0x50
 2019 002a 72000000 		.4byte	.LVL3
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 52


 2020 002e 74000000 		.4byte	.LVL4
 2021 0032 0100     		.2byte	0x1
 2022 0034 52       		.byte	0x52
 2023 0035 74000000 		.4byte	.LVL4
 2024 0039 78000000 		.4byte	.LVL6
 2025 003d 0100     		.2byte	0x1
 2026 003f 53       		.byte	0x53
 2027 0040 78000000 		.4byte	.LVL6
 2028 0044 7A000000 		.4byte	.LVL7
 2029 0048 0200     		.2byte	0x2
 2030 004a 71       		.byte	0x71
 2031 004b 00       		.sleb128 0
 2032 004c 7A000000 		.4byte	.LVL7
 2033 0050 9A000000 		.4byte	.LVL9
 2034 0054 0400     		.2byte	0x4
 2035 0056 0A       		.byte	0xa
 2036 0057 0004     		.2byte	0x400
 2037 0059 9F       		.byte	0x9f
 2038 005a 00000000 		.4byte	0
 2039 005e 00000000 		.4byte	0
 2040              	.LLST2:
 2041 0062 88000000 		.4byte	.LVL8
 2042 0066 9A000000 		.4byte	.LVL9
 2043 006a 0400     		.2byte	0x4
 2044 006c 0A       		.byte	0xa
 2045 006d 0010     		.2byte	0x1000
 2046 006f 9F       		.byte	0x9f
 2047 0070 00000000 		.4byte	0
 2048 0074 00000000 		.4byte	0
 2049              	.LLST3:
 2050 0078 00000000 		.4byte	.LVL13
 2051 007c 06000000 		.4byte	.LVL15
 2052 0080 0100     		.2byte	0x1
 2053 0082 50       		.byte	0x50
 2054 0083 06000000 		.4byte	.LVL15
 2055 0087 1A000000 		.4byte	.LVL17
 2056 008b 0100     		.2byte	0x1
 2057 008d 52       		.byte	0x52
 2058 008e 1A000000 		.4byte	.LVL17
 2059 0092 20000000 		.4byte	.LVL18
 2060 0096 0400     		.2byte	0x4
 2061 0098 F3       		.byte	0xf3
 2062 0099 01       		.uleb128 0x1
 2063 009a 50       		.byte	0x50
 2064 009b 9F       		.byte	0x9f
 2065 009c 20000000 		.4byte	.LVL18
 2066 00a0 22000000 		.4byte	.LVL19
 2067 00a4 0100     		.2byte	0x1
 2068 00a6 50       		.byte	0x50
 2069 00a7 22000000 		.4byte	.LVL19
 2070 00ab 28000000 		.4byte	.LFE6
 2071 00af 0400     		.2byte	0x4
 2072 00b1 F3       		.byte	0xf3
 2073 00b2 01       		.uleb128 0x1
 2074 00b3 50       		.byte	0x50
 2075 00b4 9F       		.byte	0x9f
 2076 00b5 00000000 		.4byte	0
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 53


 2077 00b9 00000000 		.4byte	0
 2078              	.LLST4:
 2079 00bd 02000000 		.4byte	.LVL14
 2080 00c1 06000000 		.4byte	.LVL15
 2081 00c5 0200     		.2byte	0x2
 2082 00c7 30       		.byte	0x30
 2083 00c8 9F       		.byte	0x9f
 2084 00c9 0E000000 		.4byte	.LVL16
 2085 00cd 20000000 		.4byte	.LVL18
 2086 00d1 0100     		.2byte	0x1
 2087 00d3 50       		.byte	0x50
 2088 00d4 20000000 		.4byte	.LVL18
 2089 00d8 22000000 		.4byte	.LVL19
 2090 00dc 0200     		.2byte	0x2
 2091 00de 30       		.byte	0x30
 2092 00df 9F       		.byte	0x9f
 2093 00e0 22000000 		.4byte	.LVL19
 2094 00e4 28000000 		.4byte	.LFE6
 2095 00e8 0100     		.2byte	0x1
 2096 00ea 50       		.byte	0x50
 2097 00eb 00000000 		.4byte	0
 2098 00ef 00000000 		.4byte	0
 2099              	.LLST5:
 2100 00f3 00000000 		.4byte	.LVL20
 2101 00f7 08000000 		.4byte	.LVL21
 2102 00fb 0100     		.2byte	0x1
 2103 00fd 50       		.byte	0x50
 2104 00fe 08000000 		.4byte	.LVL21
 2105 0102 12000000 		.4byte	.LVL23
 2106 0106 0100     		.2byte	0x1
 2107 0108 54       		.byte	0x54
 2108 0109 12000000 		.4byte	.LVL23
 2109 010d 20000000 		.4byte	.LVL25
 2110 0111 0400     		.2byte	0x4
 2111 0113 F3       		.byte	0xf3
 2112 0114 01       		.uleb128 0x1
 2113 0115 50       		.byte	0x50
 2114 0116 9F       		.byte	0x9f
 2115 0117 20000000 		.4byte	.LVL25
 2116 011b 22000000 		.4byte	.LVL26
 2117 011f 0100     		.2byte	0x1
 2118 0121 54       		.byte	0x54
 2119 0122 22000000 		.4byte	.LVL26
 2120 0126 2C000000 		.4byte	.LFE7
 2121 012a 0400     		.2byte	0x4
 2122 012c F3       		.byte	0xf3
 2123 012d 01       		.uleb128 0x1
 2124 012e 50       		.byte	0x50
 2125 012f 9F       		.byte	0x9f
 2126 0130 00000000 		.4byte	0
 2127 0134 00000000 		.4byte	0
 2128              	.LLST6:
 2129 0138 1E000000 		.4byte	.LVL24
 2130 013c 20000000 		.4byte	.LVL25
 2131 0140 0100     		.2byte	0x1
 2132 0142 50       		.byte	0x50
 2133 0143 22000000 		.4byte	.LVL26
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 54


 2134 0147 24000000 		.4byte	.LVL27
 2135 014b 0100     		.2byte	0x1
 2136 014d 50       		.byte	0x50
 2137 014e 00000000 		.4byte	0
 2138 0152 00000000 		.4byte	0
 2139              	.LLST7:
 2140 0156 00000000 		.4byte	.LVL28
 2141 015a 04000000 		.4byte	.LVL29
 2142 015e 0100     		.2byte	0x1
 2143 0160 50       		.byte	0x50
 2144 0161 04000000 		.4byte	.LVL29
 2145 0165 10000000 		.4byte	.LFE8
 2146 0169 0400     		.2byte	0x4
 2147 016b F3       		.byte	0xf3
 2148 016c 01       		.uleb128 0x1
 2149 016d 50       		.byte	0x50
 2150 016e 9F       		.byte	0x9f
 2151 016f 00000000 		.4byte	0
 2152 0173 00000000 		.4byte	0
 2153              	.LLST8:
 2154 0177 00000000 		.4byte	.LVL30
 2155 017b 0E000000 		.4byte	.LVL31
 2156 017f 0100     		.2byte	0x1
 2157 0181 50       		.byte	0x50
 2158 0182 0E000000 		.4byte	.LVL31
 2159 0186 1C000000 		.4byte	.LFE9
 2160 018a 0400     		.2byte	0x4
 2161 018c F3       		.byte	0xf3
 2162 018d 01       		.uleb128 0x1
 2163 018e 50       		.byte	0x50
 2164 018f 9F       		.byte	0x9f
 2165 0190 00000000 		.4byte	0
 2166 0194 00000000 		.4byte	0
 2167              	.LLST9:
 2168 0198 00000000 		.4byte	.LVL32
 2169 019c 0E000000 		.4byte	.LVL33
 2170 01a0 0100     		.2byte	0x1
 2171 01a2 50       		.byte	0x50
 2172 01a3 0E000000 		.4byte	.LVL33
 2173 01a7 18000000 		.4byte	.LFE10
 2174 01ab 0400     		.2byte	0x4
 2175 01ad F3       		.byte	0xf3
 2176 01ae 01       		.uleb128 0x1
 2177 01af 50       		.byte	0x50
 2178 01b0 9F       		.byte	0x9f
 2179 01b1 00000000 		.4byte	0
 2180 01b5 00000000 		.4byte	0
 2181              	.LLST10:
 2182 01b9 00000000 		.4byte	.LVL34
 2183 01bd 04000000 		.4byte	.LVL35
 2184 01c1 0100     		.2byte	0x1
 2185 01c3 50       		.byte	0x50
 2186 01c4 04000000 		.4byte	.LVL35
 2187 01c8 10000000 		.4byte	.LFE11
 2188 01cc 0400     		.2byte	0x4
 2189 01ce F3       		.byte	0xf3
 2190 01cf 01       		.uleb128 0x1
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 55


 2191 01d0 50       		.byte	0x50
 2192 01d1 9F       		.byte	0x9f
 2193 01d2 00000000 		.4byte	0
 2194 01d6 00000000 		.4byte	0
 2195              	.LLST11:
 2196 01da 00000000 		.4byte	.LVL36
 2197 01de 04000000 		.4byte	.LVL37
 2198 01e2 0100     		.2byte	0x1
 2199 01e4 50       		.byte	0x50
 2200 01e5 04000000 		.4byte	.LVL37
 2201 01e9 10000000 		.4byte	.LFE12
 2202 01ed 0400     		.2byte	0x4
 2203 01ef F3       		.byte	0xf3
 2204 01f0 01       		.uleb128 0x1
 2205 01f1 50       		.byte	0x50
 2206 01f2 9F       		.byte	0x9f
 2207 01f3 00000000 		.4byte	0
 2208 01f7 00000000 		.4byte	0
 2209              	.LLST12:
 2210 01fb 00000000 		.4byte	.LVL38
 2211 01ff 0C000000 		.4byte	.LVL39
 2212 0203 0100     		.2byte	0x1
 2213 0205 50       		.byte	0x50
 2214 0206 0C000000 		.4byte	.LVL39
 2215 020a 12000000 		.4byte	.LVL41
 2216 020e 0100     		.2byte	0x1
 2217 0210 54       		.byte	0x54
 2218 0211 12000000 		.4byte	.LVL41
 2219 0215 1C000000 		.4byte	.LFE13
 2220 0219 0400     		.2byte	0x4
 2221 021b F3       		.byte	0xf3
 2222 021c 01       		.uleb128 0x1
 2223 021d 50       		.byte	0x50
 2224 021e 9F       		.byte	0x9f
 2225 021f 00000000 		.4byte	0
 2226 0223 00000000 		.4byte	0
 2227              	.LLST13:
 2228 0227 00000000 		.4byte	.LVL38
 2229 022b 0F000000 		.4byte	.LVL40-1
 2230 022f 0100     		.2byte	0x1
 2231 0231 51       		.byte	0x51
 2232 0232 0F000000 		.4byte	.LVL40-1
 2233 0236 1C000000 		.4byte	.LFE13
 2234 023a 0400     		.2byte	0x4
 2235 023c F3       		.byte	0xf3
 2236 023d 01       		.uleb128 0x1
 2237 023e 51       		.byte	0x51
 2238 023f 9F       		.byte	0x9f
 2239 0240 00000000 		.4byte	0
 2240 0244 00000000 		.4byte	0
 2241              	.LLST14:
 2242 0248 00000000 		.4byte	.LVL42
 2243 024c 0C000000 		.4byte	.LVL43
 2244 0250 0100     		.2byte	0x1
 2245 0252 50       		.byte	0x50
 2246 0253 0C000000 		.4byte	.LVL43
 2247 0257 12000000 		.4byte	.LVL45
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 56


 2248 025b 0100     		.2byte	0x1
 2249 025d 54       		.byte	0x54
 2250 025e 12000000 		.4byte	.LVL45
 2251 0262 1C000000 		.4byte	.LFE14
 2252 0266 0400     		.2byte	0x4
 2253 0268 F3       		.byte	0xf3
 2254 0269 01       		.uleb128 0x1
 2255 026a 50       		.byte	0x50
 2256 026b 9F       		.byte	0x9f
 2257 026c 00000000 		.4byte	0
 2258 0270 00000000 		.4byte	0
 2259              	.LLST15:
 2260 0274 00000000 		.4byte	.LVL42
 2261 0278 0F000000 		.4byte	.LVL44-1
 2262 027c 0100     		.2byte	0x1
 2263 027e 51       		.byte	0x51
 2264 027f 0F000000 		.4byte	.LVL44-1
 2265 0283 16000000 		.4byte	.LVL46
 2266 0287 0100     		.2byte	0x1
 2267 0289 55       		.byte	0x55
 2268 028a 16000000 		.4byte	.LVL46
 2269 028e 1C000000 		.4byte	.LFE14
 2270 0292 0800     		.2byte	0x8
 2271 0294 F3       		.byte	0xf3
 2272 0295 01       		.uleb128 0x1
 2273 0296 50       		.byte	0x50
 2274 0297 32       		.byte	0x32
 2275 0298 24       		.byte	0x24
 2276 0299 73       		.byte	0x73
 2277 029a 00       		.sleb128 0
 2278 029b 22       		.byte	0x22
 2279 029c 00000000 		.4byte	0
 2280 02a0 00000000 		.4byte	0
 2281              	.LLST16:
 2282 02a4 00000000 		.4byte	.LVL47
 2283 02a8 0C000000 		.4byte	.LVL48
 2284 02ac 0100     		.2byte	0x1
 2285 02ae 50       		.byte	0x50
 2286 02af 0C000000 		.4byte	.LVL48
 2287 02b3 44000000 		.4byte	.LVL54
 2288 02b7 0100     		.2byte	0x1
 2289 02b9 54       		.byte	0x54
 2290 02ba 44000000 		.4byte	.LVL54
 2291 02be 5C000000 		.4byte	.LFE15
 2292 02c2 0400     		.2byte	0x4
 2293 02c4 F3       		.byte	0xf3
 2294 02c5 01       		.uleb128 0x1
 2295 02c6 50       		.byte	0x50
 2296 02c7 9F       		.byte	0x9f
 2297 02c8 00000000 		.4byte	0
 2298 02cc 00000000 		.4byte	0
 2299              	.LLST17:
 2300 02d0 00000000 		.4byte	.LVL47
 2301 02d4 0F000000 		.4byte	.LVL49-1
 2302 02d8 0100     		.2byte	0x1
 2303 02da 51       		.byte	0x51
 2304 02db 0F000000 		.4byte	.LVL49-1
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 57


 2305 02df 1A000000 		.4byte	.LVL50
 2306 02e3 0400     		.2byte	0x4
 2307 02e5 F3       		.byte	0xf3
 2308 02e6 01       		.uleb128 0x1
 2309 02e7 51       		.byte	0x51
 2310 02e8 9F       		.byte	0x9f
 2311 02e9 1A000000 		.4byte	.LVL50
 2312 02ed 28000000 		.4byte	.LVL51
 2313 02f1 0100     		.2byte	0x1
 2314 02f3 51       		.byte	0x51
 2315 02f4 32000000 		.4byte	.LVL52
 2316 02f8 36000000 		.4byte	.LVL53
 2317 02fc 0100     		.2byte	0x1
 2318 02fe 51       		.byte	0x51
 2319 02ff 00000000 		.4byte	0
 2320 0303 00000000 		.4byte	0
 2321              	.LLST18:
 2322 0307 00000000 		.4byte	.LVL56
 2323 030b 0C000000 		.4byte	.LVL57
 2324 030f 0100     		.2byte	0x1
 2325 0311 50       		.byte	0x50
 2326 0312 0C000000 		.4byte	.LVL57
 2327 0316 26000000 		.4byte	.LVL61
 2328 031a 0100     		.2byte	0x1
 2329 031c 55       		.byte	0x55
 2330 031d 26000000 		.4byte	.LVL61
 2331 0321 40000000 		.4byte	.LFE16
 2332 0325 0400     		.2byte	0x4
 2333 0327 F3       		.byte	0xf3
 2334 0328 01       		.uleb128 0x1
 2335 0329 50       		.byte	0x50
 2336 032a 9F       		.byte	0x9f
 2337 032b 00000000 		.4byte	0
 2338 032f 00000000 		.4byte	0
 2339              	.LLST19:
 2340 0333 00000000 		.4byte	.LVL56
 2341 0337 0F000000 		.4byte	.LVL58-1
 2342 033b 0100     		.2byte	0x1
 2343 033d 51       		.byte	0x51
 2344 033e 0F000000 		.4byte	.LVL58-1
 2345 0342 1A000000 		.4byte	.LVL59
 2346 0346 0400     		.2byte	0x4
 2347 0348 F3       		.byte	0xf3
 2348 0349 01       		.uleb128 0x1
 2349 034a 51       		.byte	0x51
 2350 034b 9F       		.byte	0x9f
 2351 034c 1A000000 		.4byte	.LVL59
 2352 0350 23000000 		.4byte	.LVL60-1
 2353 0354 0100     		.2byte	0x1
 2354 0356 50       		.byte	0x50
 2355 0357 00000000 		.4byte	0
 2356 035b 00000000 		.4byte	0
 2357              	.LLST20:
 2358 035f 00000000 		.4byte	.LVL63
 2359 0363 0C000000 		.4byte	.LVL64
 2360 0367 0100     		.2byte	0x1
 2361 0369 50       		.byte	0x50
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 58


 2362 036a 0C000000 		.4byte	.LVL64
 2363 036e 28000000 		.4byte	.LVL69
 2364 0372 0100     		.2byte	0x1
 2365 0374 54       		.byte	0x54
 2366 0375 28000000 		.4byte	.LVL69
 2367 0379 48000000 		.4byte	.LFE17
 2368 037d 0400     		.2byte	0x4
 2369 037f F3       		.byte	0xf3
 2370 0380 01       		.uleb128 0x1
 2371 0381 50       		.byte	0x50
 2372 0382 9F       		.byte	0x9f
 2373 0383 00000000 		.4byte	0
 2374 0387 00000000 		.4byte	0
 2375              	.LLST21:
 2376 038b 00000000 		.4byte	.LVL63
 2377 038f 0F000000 		.4byte	.LVL65-1
 2378 0393 0100     		.2byte	0x1
 2379 0395 51       		.byte	0x51
 2380 0396 0F000000 		.4byte	.LVL65-1
 2381 039a 1A000000 		.4byte	.LVL66
 2382 039e 0400     		.2byte	0x4
 2383 03a0 F3       		.byte	0xf3
 2384 03a1 01       		.uleb128 0x1
 2385 03a2 51       		.byte	0x51
 2386 03a3 9F       		.byte	0x9f
 2387 03a4 1A000000 		.4byte	.LVL66
 2388 03a8 1D000000 		.4byte	.LVL67-1
 2389 03ac 0100     		.2byte	0x1
 2390 03ae 50       		.byte	0x50
 2391 03af 00000000 		.4byte	0
 2392 03b3 00000000 		.4byte	0
 2393              		.section	.debug_aranges,"",%progbits
 2394 0000 A4000000 		.4byte	0xa4
 2395 0004 0200     		.2byte	0x2
 2396 0006 00000000 		.4byte	.Ldebug_info0
 2397 000a 04       		.byte	0x4
 2398 000b 00       		.byte	0
 2399 000c 0000     		.2byte	0
 2400 000e 0000     		.2byte	0
 2401 0010 00000000 		.4byte	.LFB1
 2402 0014 04010000 		.4byte	.LFE1-.LFB1
 2403 0018 00000000 		.4byte	.LFB2
 2404 001c 24000000 		.4byte	.LFE2-.LFB2
 2405 0020 00000000 		.4byte	.LFB0
 2406 0024 20000000 		.4byte	.LFE0-.LFB0
 2407 0028 00000000 		.4byte	.LFB3
 2408 002c 10000000 		.4byte	.LFE3-.LFB3
 2409 0030 00000000 		.4byte	.LFB4
 2410 0034 14000000 		.4byte	.LFE4-.LFB4
 2411 0038 00000000 		.4byte	.LFB5
 2412 003c 14000000 		.4byte	.LFE5-.LFB5
 2413 0040 00000000 		.4byte	.LFB6
 2414 0044 28000000 		.4byte	.LFE6-.LFB6
 2415 0048 00000000 		.4byte	.LFB7
 2416 004c 2C000000 		.4byte	.LFE7-.LFB7
 2417 0050 00000000 		.4byte	.LFB8
 2418 0054 10000000 		.4byte	.LFE8-.LFB8
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 59


 2419 0058 00000000 		.4byte	.LFB9
 2420 005c 1C000000 		.4byte	.LFE9-.LFB9
 2421 0060 00000000 		.4byte	.LFB10
 2422 0064 18000000 		.4byte	.LFE10-.LFB10
 2423 0068 00000000 		.4byte	.LFB11
 2424 006c 10000000 		.4byte	.LFE11-.LFB11
 2425 0070 00000000 		.4byte	.LFB12
 2426 0074 10000000 		.4byte	.LFE12-.LFB12
 2427 0078 00000000 		.4byte	.LFB13
 2428 007c 1C000000 		.4byte	.LFE13-.LFB13
 2429 0080 00000000 		.4byte	.LFB14
 2430 0084 1C000000 		.4byte	.LFE14-.LFB14
 2431 0088 00000000 		.4byte	.LFB15
 2432 008c 5C000000 		.4byte	.LFE15-.LFB15
 2433 0090 00000000 		.4byte	.LFB16
 2434 0094 40000000 		.4byte	.LFE16-.LFB16
 2435 0098 00000000 		.4byte	.LFB17
 2436 009c 48000000 		.4byte	.LFE17-.LFB17
 2437 00a0 00000000 		.4byte	0
 2438 00a4 00000000 		.4byte	0
 2439              		.section	.debug_ranges,"",%progbits
 2440              	.Ldebug_ranges0:
 2441 0000 00000000 		.4byte	.LFB1
 2442 0004 04010000 		.4byte	.LFE1
 2443 0008 00000000 		.4byte	.LFB2
 2444 000c 24000000 		.4byte	.LFE2
 2445 0010 00000000 		.4byte	.LFB0
 2446 0014 20000000 		.4byte	.LFE0
 2447 0018 00000000 		.4byte	.LFB3
 2448 001c 10000000 		.4byte	.LFE3
 2449 0020 00000000 		.4byte	.LFB4
 2450 0024 14000000 		.4byte	.LFE4
 2451 0028 00000000 		.4byte	.LFB5
 2452 002c 14000000 		.4byte	.LFE5
 2453 0030 00000000 		.4byte	.LFB6
 2454 0034 28000000 		.4byte	.LFE6
 2455 0038 00000000 		.4byte	.LFB7
 2456 003c 2C000000 		.4byte	.LFE7
 2457 0040 00000000 		.4byte	.LFB8
 2458 0044 10000000 		.4byte	.LFE8
 2459 0048 00000000 		.4byte	.LFB9
 2460 004c 1C000000 		.4byte	.LFE9
 2461 0050 00000000 		.4byte	.LFB10
 2462 0054 18000000 		.4byte	.LFE10
 2463 0058 00000000 		.4byte	.LFB11
 2464 005c 10000000 		.4byte	.LFE11
 2465 0060 00000000 		.4byte	.LFB12
 2466 0064 10000000 		.4byte	.LFE12
 2467 0068 00000000 		.4byte	.LFB13
 2468 006c 1C000000 		.4byte	.LFE13
 2469 0070 00000000 		.4byte	.LFB14
 2470 0074 1C000000 		.4byte	.LFE14
 2471 0078 00000000 		.4byte	.LFB15
 2472 007c 5C000000 		.4byte	.LFE15
 2473 0080 00000000 		.4byte	.LFB16
 2474 0084 40000000 		.4byte	.LFE16
 2475 0088 00000000 		.4byte	.LFB17
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 60


 2476 008c 48000000 		.4byte	.LFE17
 2477 0090 00000000 		.4byte	0
 2478 0094 00000000 		.4byte	0
 2479              		.section	.debug_line,"",%progbits
 2480              	.Ldebug_line0:
 2481 0000 7F020000 		.section	.debug_str,"MS",%progbits,1
 2481      02005700 
 2481      00000201 
 2481      FB0E0D00 
 2481      01010101 
 2482              	.LASF57:
 2483 0000 4144435F 		.ascii	"ADC_SAR_Seq_1_offset\000"
 2483      5341525F 
 2483      5365715F 
 2483      315F6F66 
 2483      66736574 
 2484              	.LASF10:
 2485 0015 75696E74 		.ascii	"uint16\000"
 2485      313600
 2486              	.LASF25:
 2487 001c 4144435F 		.ascii	"ADC_SAR_Seq_1_Init\000"
 2487      5341525F 
 2487      5365715F 
 2487      315F496E 
 2487      697400
 2488              	.LASF48:
 2489 002f 61646347 		.ascii	"adcGain\000"
 2489      61696E00 
 2490              	.LASF24:
 2491 0037 636F756E 		.ascii	"counts\000"
 2491      747300
 2492              	.LASF29:
 2493 003e 4144435F 		.ascii	"ADC_SAR_Seq_1_StartConvert\000"
 2493      5341525F 
 2493      5365715F 
 2493      315F5374 
 2493      61727443 
 2494              	.LASF44:
 2495 0059 4144435F 		.ascii	"ADC_SAR_Seq_1_SetSatMask\000"
 2495      5341525F 
 2495      5365715F 
 2495      315F5365 
 2495      74536174 
 2496              	.LASF27:
 2497 0072 4144435F 		.ascii	"ADC_SAR_Seq_1_Start\000"
 2497      5341525F 
 2497      5365715F 
 2497      315F5374 
 2497      61727400 
 2498              	.LASF7:
 2499 0086 6C6F6E67 		.ascii	"long long unsigned int\000"
 2499      206C6F6E 
 2499      6720756E 
 2499      7369676E 
 2499      65642069 
 2500              	.LASF26:
 2501 009d 4144435F 		.ascii	"ADC_SAR_Seq_1_Enable\000"
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 61


 2501      5341525F 
 2501      5365715F 
 2501      315F456E 
 2501      61626C65 
 2502              	.LASF33:
 2503 00b2 4144435F 		.ascii	"ADC_SAR_Seq_1_GetResult16\000"
 2503      5341525F 
 2503      5365715F 
 2503      315F4765 
 2503      74526573 
 2504              	.LASF6:
 2505 00cc 6C6F6E67 		.ascii	"long long int\000"
 2505      206C6F6E 
 2505      6720696E 
 2505      7400
 2506              	.LASF0:
 2507 00da 7369676E 		.ascii	"signed char\000"
 2507      65642063 
 2507      68617200 
 2508              	.LASF41:
 2509 00e6 4144435F 		.ascii	"ADC_SAR_Seq_1_SetHighLimit\000"
 2509      5341525F 
 2509      5365715F 
 2509      315F5365 
 2509      74486967 
 2510              	.LASF13:
 2511 0101 696E7433 		.ascii	"int32\000"
 2511      3200
 2512              	.LASF52:
 2513 0107 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_uVolts\000"
 2513      5341525F 
 2513      5365715F 
 2513      315F436F 
 2513      756E7473 
 2514              	.LASF4:
 2515 0125 6C6F6E67 		.ascii	"long int\000"
 2515      20696E74 
 2515      00
 2516              	.LASF9:
 2517 012e 75696E74 		.ascii	"uint8\000"
 2517      3800
 2518              	.LASF60:
 2519 0134 43794465 		.ascii	"CyDelayUs\000"
 2519      6C617955 
 2519      7300
 2520              	.LASF16:
 2521 013e 646F7562 		.ascii	"double\000"
 2521      6C6500
 2522              	.LASF11:
 2523 0145 75696E74 		.ascii	"uint32\000"
 2523      333200
 2524              	.LASF38:
 2525 014c 6D61736B 		.ascii	"mask\000"
 2525      00
 2526              	.LASF49:
 2527 0151 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_mVolts\000"
 2527      5341525F 
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 62


 2527      5365715F 
 2527      315F436F 
 2527      756E7473 
 2528              	.LASF34:
 2529 016f 7265744D 		.ascii	"retMode\000"
 2529      6F646500 
 2530              	.LASF56:
 2531 0177 4144435F 		.ascii	"ADC_SAR_Seq_1_initVar\000"
 2531      5341525F 
 2531      5365715F 
 2531      315F696E 
 2531      69745661 
 2532              	.LASF8:
 2533 018d 756E7369 		.ascii	"unsigned int\000"
 2533      676E6564 
 2533      20696E74 
 2533      00
 2534              	.LASF64:
 2535 019a 75566F6C 		.ascii	"uVolts\000"
 2535      747300
 2536              	.LASF5:
 2537 01a1 6C6F6E67 		.ascii	"long unsigned int\000"
 2537      20756E73 
 2537      69676E65 
 2537      6420696E 
 2537      7400
 2538              	.LASF54:
 2539 01b3 766F6C74 		.ascii	"volts\000"
 2539      7300
 2540              	.LASF23:
 2541 01b9 746D7052 		.ascii	"tmpRegVal\000"
 2541      65675661 
 2541      6C00
 2542              	.LASF3:
 2543 01c3 73686F72 		.ascii	"short unsigned int\000"
 2543      7420756E 
 2543      7369676E 
 2543      65642069 
 2543      6E7400
 2544              	.LASF65:
 2545 01d6 4379496E 		.ascii	"CyIntSetVector\000"
 2545      74536574 
 2545      56656374 
 2545      6F7200
 2546              	.LASF55:
 2547 01e5 4144435F 		.ascii	"ADC_SAR_Seq_1_channelsConfig\000"
 2547      5341525F 
 2547      5365715F 
 2547      315F6368 
 2547      616E6E65 
 2548              	.LASF51:
 2549 0202 6D566F6C 		.ascii	"mVolts\000"
 2549      747300
 2550              	.LASF19:
 2551 0209 72656733 		.ascii	"reg32\000"
 2551      3200
 2552              	.LASF62:
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 63


 2553 020f 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ADC_SAR_Seq_1.c\000"
 2553      6E657261 
 2553      7465645F 
 2553      536F7572 
 2553      63655C50 
 2554              	.LASF14:
 2555 0238 666C6F61 		.ascii	"float32\000"
 2555      74333200 
 2556              	.LASF21:
 2557 0240 73697A65 		.ascii	"sizetype\000"
 2557      74797065 
 2557      00
 2558              	.LASF40:
 2559 0249 6C6F774C 		.ascii	"lowLimit\000"
 2559      696D6974 
 2559      00
 2560              	.LASF32:
 2561 0252 4144435F 		.ascii	"ADC_SAR_Seq_1_IsEndConversion\000"
 2561      5341525F 
 2561      5365715F 
 2561      315F4973 
 2561      456E6443 
 2562              	.LASF30:
 2563 0270 4144435F 		.ascii	"ADC_SAR_Seq_1_StopConvert\000"
 2563      5341525F 
 2563      5365715F 
 2563      315F5374 
 2563      6F70436F 
 2564              	.LASF61:
 2565 028a 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2565      4320342E 
 2565      392E3320 
 2565      32303135 
 2565      30333033 
 2566 02bd 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 2566      20726576 
 2566      6973696F 
 2566      6E203232 
 2566      31323230 
 2567 02f0 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2567      66756E63 
 2567      74696F6E 
 2567      2D736563 
 2567      74696F6E 
 2568              	.LASF17:
 2569 0318 696E7436 		.ascii	"int64\000"
 2569      3400
 2570              	.LASF59:
 2571 031e 4379496E 		.ascii	"CyIntSetPriority\000"
 2571      74536574 
 2571      5072696F 
 2571      72697479 
 2571      00
 2572              	.LASF63:
 2573 032f 433A5C77 		.ascii	"C:\\work\\PSoC4\\Desalinator\\Desalinator.cydsn\000"
 2573      6F726B5C 
 2573      50536F43 
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 64


 2573      345C4465 
 2573      73616C69 
 2574              	.LASF15:
 2575 035b 666C6F61 		.ascii	"float\000"
 2575      7400
 2576              	.LASF47:
 2577 0361 4144435F 		.ascii	"ADC_SAR_Seq_1_SetGain\000"
 2577      5341525F 
 2577      5365715F 
 2577      315F5365 
 2577      74476169 
 2578              	.LASF28:
 2579 0377 4144435F 		.ascii	"ADC_SAR_Seq_1_Stop\000"
 2579      5341525F 
 2579      5365715F 
 2579      315F5374 
 2579      6F7000
 2580              	.LASF42:
 2581 038a 68696768 		.ascii	"highLimit\000"
 2581      4C696D69 
 2581      7400
 2582              	.LASF66:
 2583 0394 43794861 		.ascii	"CyHalt\000"
 2583      6C7400
 2584              	.LASF1:
 2585 039b 756E7369 		.ascii	"unsigned char\000"
 2585      676E6564 
 2585      20636861 
 2585      7200
 2586              	.LASF2:
 2587 03a9 73686F72 		.ascii	"short int\000"
 2587      7420696E 
 2587      7400
 2588              	.LASF53:
 2589 03b3 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_Volts\000"
 2589      5341525F 
 2589      5365715F 
 2589      315F436F 
 2589      756E7473 
 2590              	.LASF37:
 2591 03d0 4144435F 		.ascii	"ADC_SAR_Seq_1_SetChanMask\000"
 2591      5341525F 
 2591      5365715F 
 2591      315F5365 
 2591      74436861 
 2592              	.LASF22:
 2593 03ea 63684E75 		.ascii	"chNum\000"
 2593      6D00
 2594              	.LASF35:
 2595 03f0 6368616E 		.ascii	"chan\000"
 2595      00
 2596              	.LASF18:
 2597 03f5 63686172 		.ascii	"char\000"
 2597      00
 2598              	.LASF20:
 2599 03fa 63796973 		.ascii	"cyisraddress\000"
 2599      72616464 
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccpmG5sW.s 			page 65


 2599      72657373 
 2599      00
 2600              	.LASF39:
 2601 0407 4144435F 		.ascii	"ADC_SAR_Seq_1_SetLowLimit\000"
 2601      5341525F 
 2601      5365715F 
 2601      315F5365 
 2601      744C6F77 
 2602              	.LASF46:
 2603 0421 6F666673 		.ascii	"offset\000"
 2603      657400
 2604              	.LASF50:
 2605 0428 61646343 		.ascii	"adcCounts\000"
 2605      6F756E74 
 2605      7300
 2606              	.LASF58:
 2607 0432 4144435F 		.ascii	"ADC_SAR_Seq_1_countsPer10Volt\000"
 2607      5341525F 
 2607      5365715F 
 2607      315F636F 
 2607      756E7473 
 2608              	.LASF31:
 2609 0450 73746174 		.ascii	"status\000"
 2609      757300
 2610              	.LASF45:
 2611 0457 4144435F 		.ascii	"ADC_SAR_Seq_1_SetOffset\000"
 2611      5341525F 
 2611      5365715F 
 2611      315F5365 
 2611      744F6666 
 2612              	.LASF12:
 2613 046f 696E7431 		.ascii	"int16\000"
 2613      3600
 2614              	.LASF43:
 2615 0475 4144435F 		.ascii	"ADC_SAR_Seq_1_SetLimitMask\000"
 2615      5341525F 
 2615      5365715F 
 2615      315F5365 
 2615      744C696D 
 2616              	.LASF36:
 2617 0490 72657375 		.ascii	"result\000"
 2617      6C7400
 2618              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
